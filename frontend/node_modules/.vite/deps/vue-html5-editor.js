import {
  __commonJS
} from "./chunk-DFKQJ226.js";

// node_modules/vue-html5-editor/dist/vue-html5-editor.js
var require_vue_html5_editor = __commonJS({
  "node_modules/vue-html5-editor/dist/vue-html5-editor.js"(exports, module) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? module.exports = factory() : typeof define === "function" && define.amd ? define(factory) : global2.VueHtml5Editor = factory();
    })(exports, function() {
      "use strict";
      function __$styleInject(css, returnValue) {
        if (typeof document === "undefined") {
          return returnValue;
        }
        css = css || "";
        var head = document.head || document.getElementsByTagName("head")[0];
        var style = document.createElement("style");
        style.type = "text/css";
        if (style.styleSheet) {
          style.styleSheet.cssText = css;
        } else {
          style.appendChild(document.createTextNode(css));
        }
        head.appendChild(style);
        return returnValue;
      }
      var polyfill = function() {
        if (!Array.prototype.includes) {
          Object.defineProperty(Array.prototype, "includes", {
            value: function value(searchElement, fromIndex) {
              if (this == null) {
                throw new TypeError('"this" is null or not defined');
              }
              var o = Object(this);
              var len = o.length >>> 0;
              if (len === 0) {
                return false;
              }
              var n = fromIndex | 0;
              var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);
              while (k < len) {
                if (o[k] === searchElement) {
                  return true;
                }
                k++;
              }
              return false;
            }
          });
        }
        if (!Text.prototype.contains) {
          Text.prototype.contains = function contains(node) {
            return this === node;
          };
        }
      };
      var template = `<div> <button type="button" @click="$parent.execCommand('justifyLeft')"> {{$parent.locale["left justify"]}} </button> <button type="button" @click="$parent.execCommand('justifyCenter')"> {{$parent.locale["center justify"]}} </button> <button type="button" @click="$parent.execCommand('justifyRight')"> {{$parent.locale["right justify"]}} </button> </div>`;
      var dashboard = {
        template
      };
      var align = {
        name: "align",
        icon: "fa fa-align-center",
        i18n: "align",
        dashboard
      };
      var template$1 = `<div> <div> <label> <input type="radio" value="foreColor" v-model="command">&nbsp; {{$parent.locale["fore color"]}} </label> <label> <input type="radio" value="backColor" v-model="command">&nbsp; {{$parent.locale["background color"]}} </label> </div> <div> <div v-for="color in colors" :style="{'background-color':color}" class="color-card" @click="changeColor(color)"> </div> <div style="clear: both"></div> </div> </div> `;
      __$styleInject(".vue-html5-editor .color-card{margin:2px;width:30px;height:30px;float:left;cursor:pointer}", void 0);
      var dashboard$1 = {
        template: template$1,
        data: function data() {
          return {
            // foreColor,backColor
            command: "foreColor",
            colors: [
              "#000000",
              "#000033",
              "#000066",
              "#000099",
              "#003300",
              "#003333",
              "#003366",
              "#003399",
              "#006600",
              "#006633",
              "#009900",
              "#330000",
              "#330033",
              "#330066",
              "#333300",
              "#333366",
              "#660000",
              "#660033",
              "#663300",
              "#666600",
              "#666633",
              "#666666",
              "#666699",
              "#990000",
              "#990033",
              "#9900CC",
              "#996600",
              "#FFCC00",
              "#FFCCCC",
              "#FFCC99",
              "#FFFF00",
              "#FF9900",
              "#CCFFCC",
              "#CCFFFF",
              "#CCFF99"
            ]
          };
        },
        methods: {
          changeColor: function changeColor(color2) {
            this.$parent.execCommand(this.command, color2);
          }
        }
      };
      var color = {
        name: "color",
        icon: "fa fa-paint-brush",
        i18n: "color",
        dashboard: dashboard$1
      };
      var eraser = {
        name: "eraser",
        icon: "fa fa-eraser",
        i18n: "eraser",
        handler: function handler(editor2) {
          editor2.execCommand("removeFormat");
        }
      };
      var template$2 = '<div class="dashboard-font" style="line-height: 36px"> <div> <label>{{$parent.locale["heading"]}}:</label> <button v-for="h in 6" type="button" @click="setHeading(h)">H{{h}}</button> </div> <div> <label> {{$parent.locale["font name"]}}: </label> <button v-for="name in nameList" type="button" @click="setFontName(name)">{{name}}</button> </div> <div> <label> {{$parent.locale["font size"]}}: </label> <button v-for="size in fontSizeList" type="button" @click="setFontSize(size)">{{size}}</button> </div> <div> <label> {{$parent.locale["line height"]}}: </label> <button v-for="lh in lineHeightList" type="button" @click="setLineHeight(lh)"> {{lh}} </button> </div> </div>';
      var Command = {
        JUSTIFY_LEFT: "justifyLeft",
        JUSTIFY_CENTER: "justifyCenter",
        JUSTIFY_RIGHT: "justifyRight",
        FORE_COLOR: "foreColor",
        BACK_COLOR: "backColor",
        REMOVE_FORMAT: "removeFormat",
        FONT_NAME: "fontName",
        FONT_SIZE: "fontSize",
        FORMAT_BLOCK: "formatBlock",
        LINE_HEIGHT: "lineHeight",
        INSERT_HORIZONTAL_RULE: "insertHorizontalRule",
        INSERT_IMAGE: "insertImage",
        CREATE_LINK: "createLink",
        INSERT_ORDERED_LIST: "insertOrderedList",
        INSERT_UNORDERED_LIST: "insertUnorderedList",
        INSERT_HTML: "insertHTML",
        BOLD: "bold",
        ITALIC: "italic",
        UNDERLINE: "underline",
        STRIKE_THROUGH: "strikeThrough",
        SUBSCRIPT: "subscript",
        SUPERSCRIPT: "superscript",
        UNDO: "undo",
        UNLINK: "unlink"
      };
      var dashboard$2 = {
        template: template$2,
        data: function data() {
          return {
            nameList: [
              "Microsoft YaHei",
              "Helvetica Neue",
              "Helvetica",
              "Arial",
              "sans-serif",
              "Verdana",
              "Georgia",
              "Times New Roman",
              "Trebuchet MS",
              "Microsoft JhengHei",
              "Courier New",
              "Impact",
              "Comic Sans MS",
              "Consolas"
            ],
            lineHeightList: [
              "1.0",
              "1.2",
              "1.5",
              "1.8",
              "2.0",
              "2.5",
              "3.0"
            ],
            fontSizeList: [
              "12px",
              "14px",
              "16px",
              "18px",
              "20px",
              "22px",
              "24px"
            ]
          };
        },
        methods: {
          setFontName: function setFontName(name) {
            this.$parent.execCommand("fontName", name);
          },
          setFontSize: function setFontSize(size) {
            this.$parent.execCommand("fontSize", size);
          },
          setHeading: function setHeading(heading) {
            this.$parent.execCommand("formatBlock", "h" + heading);
          },
          setLineHeight: function setLineHeight(lh) {
            this.$parent.execCommand(Command.LINE_HEIGHT, lh);
          }
        },
        created: function created() {
          var config = this.$options.module.config;
          if (!config) {
            return;
          }
          if (Array.isArray(config.fontNames)) {
            this.nameList = config.fontNames;
          }
        }
      };
      var font = {
        name: "font",
        icon: "fa fa-font",
        i18n: "font",
        dashboard: dashboard$2
      };
      var fullScreen$1 = {
        name: "full-screen",
        icon: "fa fa-arrows-alt",
        i18n: "full screen",
        handler: function handler(editor2) {
          editor2.toggleFullScreen();
        }
      };
      var hr = {
        name: "hr",
        icon: "fa fa-minus",
        i18n: "hr",
        handler: function handler(editor2) {
          editor2.execCommand("insertHorizontalRule");
        }
        // init (editor) {
        //
        // },
        // destroyed(editor){
        //
        // },
      };
      var commonjsGlobal = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
      function createCommonjsModule(fn, module2) {
        return module2 = { exports: {} }, fn(module2, module2.exports), module2.exports;
      }
      var lrz_all_bundle = createCommonjsModule(function(module2, exports2) {
        !function(e, t) {
          if ("object" == typeof exports2 && "object" == typeof module2) {
            module2.exports = t();
          } else if (false) {
            (void 0)([], t);
          } else {
            var n = t();
            for (var r in n) {
              ("object" == typeof exports2 ? exports2 : e)[r] = n[r];
            }
          }
        }(commonjsGlobal, function() {
          return function(e) {
            function t(r) {
              if (n[r]) {
                return n[r].exports;
              }
              var i = n[r] = { exports: {}, id: r, loaded: false };
              return e[r].call(i.exports, i, i.exports, t), i.loaded = true, i.exports;
            }
            var n = {};
            return t.m = e, t.c = n, t.p = "", t(0);
          }([function(e, t, n) {
            n(6), n(7), e.exports = n(8);
          }, function(e, t, n) {
            (function(t2) {
              !function(n2) {
                function r(e2, t3) {
                  return function() {
                    e2.apply(t3, arguments);
                  };
                }
                function i(e2) {
                  if ("object" != typeof this) {
                    throw new TypeError("Promises must be constructed via new");
                  }
                  if ("function" != typeof e2) {
                    throw new TypeError("not a function");
                  }
                  this._state = null, this._value = null, this._deferreds = [], l(e2, r(a, this), r(s, this));
                }
                function o(e2) {
                  var t3 = this;
                  return null === this._state ? void this._deferreds.push(e2) : void f(function() {
                    var n3 = t3._state ? e2.onFulfilled : e2.onRejected;
                    if (null === n3) {
                      return void (t3._state ? e2.resolve : e2.reject)(t3._value);
                    }
                    var r2;
                    try {
                      r2 = n3(t3._value);
                    } catch (i2) {
                      return void e2.reject(i2);
                    }
                    e2.resolve(r2);
                  });
                }
                function a(e2) {
                  try {
                    if (e2 === this) {
                      throw new TypeError("A promise cannot be resolved with itself.");
                    }
                    if (e2 && ("object" == typeof e2 || "function" == typeof e2)) {
                      var t3 = e2.then;
                      if ("function" == typeof t3) {
                        return void l(r(t3, e2), r(a, this), r(s, this));
                      }
                    }
                    this._state = true, this._value = e2, u.call(this);
                  } catch (n3) {
                    s.call(this, n3);
                  }
                }
                function s(e2) {
                  this._state = false, this._value = e2, u.call(this);
                }
                function u() {
                  var this$1 = this;
                  for (var e2 = 0, t3 = this._deferreds.length; t3 > e2; e2++) {
                    o.call(this$1, this$1._deferreds[e2]);
                  }
                  this._deferreds = null;
                }
                function c(e2, t3, n3, r2) {
                  this.onFulfilled = "function" == typeof e2 ? e2 : null, this.onRejected = "function" == typeof t3 ? t3 : null, this.resolve = n3, this.reject = r2;
                }
                function l(e2, t3, n3) {
                  var r2 = false;
                  try {
                    e2(function(e3) {
                      r2 || (r2 = true, t3(e3));
                    }, function(e3) {
                      r2 || (r2 = true, n3(e3));
                    });
                  } catch (i2) {
                    if (r2) {
                      return;
                    }
                    r2 = true, n3(i2);
                  }
                }
                var f = "function" == typeof t2 && t2 || function(e2) {
                  setTimeout(e2, 1);
                }, d = Array.isArray || function(e2) {
                  return "[object Array]" === Object.prototype.toString.call(e2);
                };
                i.prototype["catch"] = function(e2) {
                  return this.then(null, e2);
                }, i.prototype.then = function(e2, t3) {
                  var n3 = this;
                  return new i(function(r2, i2) {
                    o.call(n3, new c(e2, t3, r2, i2));
                  });
                }, i.all = function() {
                  var e2 = Array.prototype.slice.call(1 === arguments.length && d(arguments[0]) ? arguments[0] : arguments);
                  return new i(function(t3, n3) {
                    function r2(o3, a2) {
                      try {
                        if (a2 && ("object" == typeof a2 || "function" == typeof a2)) {
                          var s2 = a2.then;
                          if ("function" == typeof s2) {
                            return void s2.call(a2, function(e3) {
                              r2(o3, e3);
                            }, n3);
                          }
                        }
                        e2[o3] = a2, 0 === --i2 && t3(e2);
                      } catch (u2) {
                        n3(u2);
                      }
                    }
                    if (0 === e2.length) {
                      return t3([]);
                    }
                    for (var i2 = e2.length, o2 = 0; o2 < e2.length; o2++) {
                      r2(o2, e2[o2]);
                    }
                  });
                }, i.resolve = function(e2) {
                  return e2 && "object" == typeof e2 && e2.constructor === i ? e2 : new i(function(t3) {
                    t3(e2);
                  });
                }, i.reject = function(e2) {
                  return new i(function(t3, n3) {
                    n3(e2);
                  });
                }, i.race = function(e2) {
                  return new i(function(t3, n3) {
                    for (var r2 = 0, i2 = e2.length; i2 > r2; r2++) {
                      e2[r2].then(t3, n3);
                    }
                  });
                }, i._setImmediateFn = function(e2) {
                  f = e2;
                }, i.prototype.always = function(e2) {
                  var t3 = this.constructor;
                  return this.then(function(n3) {
                    return t3.resolve(e2()).then(function() {
                      return n3;
                    });
                  }, function(n3) {
                    return t3.resolve(e2()).then(function() {
                      throw n3;
                    });
                  });
                }, "undefined" != typeof e && e.exports ? e.exports = i : n2.Promise || (n2.Promise = i);
              }(this);
            }).call(t, n(2).setImmediate);
          }, function(e, t, n) {
            (function(e2, r) {
              function i(e3, t2) {
                this._id = e3, this._clearFn = t2;
              }
              var o = n(3).nextTick, a = Function.prototype.apply, s = Array.prototype.slice, u = {}, c = 0;
              t.setTimeout = function() {
                return new i(a.call(setTimeout, window, arguments), clearTimeout);
              }, t.setInterval = function() {
                return new i(a.call(setInterval, window, arguments), clearInterval);
              }, t.clearTimeout = t.clearInterval = function(e3) {
                e3.close();
              }, i.prototype.unref = i.prototype.ref = function() {
              }, i.prototype.close = function() {
                this._clearFn.call(window, this._id);
              }, t.enroll = function(e3, t2) {
                clearTimeout(e3._idleTimeoutId), e3._idleTimeout = t2;
              }, t.unenroll = function(e3) {
                clearTimeout(e3._idleTimeoutId), e3._idleTimeout = -1;
              }, t._unrefActive = t.active = function(e3) {
                clearTimeout(e3._idleTimeoutId);
                var t2 = e3._idleTimeout;
                t2 >= 0 && (e3._idleTimeoutId = setTimeout(function() {
                  e3._onTimeout && e3._onTimeout();
                }, t2));
              }, t.setImmediate = "function" == typeof e2 ? e2 : function(e3) {
                var n2 = c++, r2 = arguments.length < 2 ? false : s.call(arguments, 1);
                return u[n2] = true, o(function() {
                  u[n2] && (r2 ? e3.apply(null, r2) : e3.call(null), t.clearImmediate(n2));
                }), n2;
              }, t.clearImmediate = "function" == typeof r ? r : function(e3) {
                delete u[e3];
              };
            }).call(t, n(2).setImmediate, n(2).clearImmediate);
          }, function(e, t) {
            function n() {
              c = false, a.length ? u = a.concat(u) : l = -1, u.length && r();
            }
            function r() {
              if (!c) {
                var e2 = setTimeout(n);
                c = true;
                for (var t2 = u.length; t2; ) {
                  for (a = u, u = []; ++l < t2; ) {
                    a && a[l].run();
                  }
                  l = -1, t2 = u.length;
                }
                a = null, c = false, clearTimeout(e2);
              }
            }
            function i(e2, t2) {
              this.fun = e2, this.array = t2;
            }
            function o() {
            }
            var a, s = e.exports = {}, u = [], c = false, l = -1;
            s.nextTick = function(e2) {
              var arguments$1 = arguments;
              var t2 = new Array(arguments.length - 1);
              if (arguments.length > 1) {
                for (var n2 = 1; n2 < arguments.length; n2++) {
                  t2[n2 - 1] = arguments$1[n2];
                }
              }
              u.push(new i(e2, t2)), 1 !== u.length || c || setTimeout(r, 0);
            }, i.prototype.run = function() {
              this.fun.apply(null, this.array);
            }, s.title = "browser", s.browser = true, s.env = {}, s.argv = [], s.version = "", s.versions = {}, s.on = o, s.addListener = o, s.once = o, s.off = o, s.removeListener = o, s.removeAllListeners = o, s.emit = o, s.binding = function(e2) {
              throw new Error("process.binding is not supported");
            }, s.cwd = function() {
              return "/";
            }, s.chdir = function(e2) {
              throw new Error("process.chdir is not supported");
            }, s.umask = function() {
              return 0;
            };
          }, function(e, t) {
            function n() {
              var e2 = ~navigator.userAgent.indexOf("Android") && ~navigator.vendor.indexOf("Google") && !~navigator.userAgent.indexOf("Chrome");
              return e2 && navigator.userAgent.match(/AppleWebKit\/(\d+)/).pop() <= 534 || /MQQBrowser/g.test(navigator.userAgent);
            }
            var r = function() {
              try {
                return new Blob(), true;
              } catch (e2) {
                return false;
              }
            }() ? window.Blob : function(e2, t2) {
              var n2 = new (window.BlobBuilder || window.WebKitBlobBuilder || window.MSBlobBuilder || window.MozBlobBuilder)();
              return e2.forEach(function(e3) {
                n2.append(e3);
              }), n2.getBlob(t2 ? t2.type : void 0);
            }, i = function() {
              function e2() {
                var e3 = this, n2 = [], i2 = Array(21).join("-") + (+new Date() * (1e16 * Math.random())).toString(36), o = XMLHttpRequest.prototype.send;
                this.getParts = function() {
                  return n2.toString();
                }, this.append = function(e4, t3, r2) {
                  n2.push("--" + i2 + '\r\nContent-Disposition: form-data; name="' + e4 + '"'), t3 instanceof Blob ? (n2.push('; filename="' + (r2 || "blob") + '"\r\nContent-Type: ' + t3.type + "\r\n\r\n"), n2.push(t3)) : n2.push("\r\n\r\n" + t3), n2.push("\r\n");
                }, t2++, XMLHttpRequest.prototype.send = function(a) {
                  var s, u, c = this;
                  a === e3 ? (n2.push("--" + i2 + "--\r\n"), u = new r(n2), s = new FileReader(), s.onload = function() {
                    o.call(c, s.result);
                  }, s.onerror = function(e4) {
                    throw e4;
                  }, s.readAsArrayBuffer(u), this.setRequestHeader("Content-Type", "multipart/form-data; boundary=" + i2), t2--, 0 == t2 && (XMLHttpRequest.prototype.send = o)) : o.call(this, a);
                };
              }
              var t2 = 0;
              return e2.prototype = Object.create(FormData.prototype), e2;
            }();
            e.exports = { Blob: r, FormData: n() ? i : FormData };
          }, function(e, t, n) {
            var r, i;
            (function() {
              function n2(e2) {
                return !!e2.exifdata;
              }
              function o(e2, t2) {
                t2 = t2 || e2.match(/^data\:([^\;]+)\;base64,/im)[1] || "", e2 = e2.replace(/^data\:([^\;]+)\;base64,/gim, "");
                for (var n3 = atob(e2), r2 = n3.length, i2 = new ArrayBuffer(r2), o2 = new Uint8Array(i2), a2 = 0; r2 > a2; a2++) {
                  o2[a2] = n3.charCodeAt(a2);
                }
                return i2;
              }
              function a(e2, t2) {
                var n3 = new XMLHttpRequest();
                n3.open("GET", e2, true), n3.responseType = "blob", n3.onload = function(e3) {
                  (200 == this.status || 0 === this.status) && t2(this.response);
                }, n3.send();
              }
              function s(e2, t2) {
                function n3(n4) {
                  var r3 = u(n4), i3 = c(n4);
                  e2.exifdata = r3 || {}, e2.iptcdata = i3 || {}, t2 && t2.call(e2);
                }
                if (e2.src) {
                  if (/^data\:/i.test(e2.src)) {
                    var r2 = o(e2.src);
                    n3(r2);
                  } else if (/^blob\:/i.test(e2.src)) {
                    var i2 = new FileReader();
                    i2.onload = function(e3) {
                      n3(e3.target.result);
                    }, a(e2.src, function(e3) {
                      i2.readAsArrayBuffer(e3);
                    });
                  } else {
                    var s2 = new XMLHttpRequest();
                    s2.onload = function() {
                      200 == this.status || 0 === this.status ? n3(s2.response) : t2(new Error("Could not load image")), s2 = null;
                    }, s2.open("GET", e2.src, true), s2.responseType = "arraybuffer", s2.send(null);
                  }
                } else if (window.FileReader && (e2 instanceof window.Blob || e2 instanceof window.File)) {
                  var i2 = new FileReader();
                  i2.onload = function(e3) {
                    p && console.log("Got file of length " + e3.target.result.byteLength), n3(e3.target.result);
                  }, i2.readAsArrayBuffer(e2);
                }
              }
              function u(e2) {
                var t2 = new DataView(e2);
                if (p && console.log("Got file of length " + e2.byteLength), 255 != t2.getUint8(0) || 216 != t2.getUint8(1)) {
                  return p && console.log("Not a valid JPEG"), false;
                }
                for (var n3, r2 = 2, i2 = e2.byteLength; i2 > r2; ) {
                  if (255 != t2.getUint8(r2)) {
                    return p && console.log("Not a valid marker at offset " + r2 + ", found: " + t2.getUint8(r2)), false;
                  }
                  if (n3 = t2.getUint8(r2 + 1), p && console.log(n3), 225 == n3) {
                    return p && console.log("Found 0xFFE1 marker"), g(t2, r2 + 4, t2.getUint16(r2 + 2) - 2);
                  }
                  r2 += 2 + t2.getUint16(r2 + 2);
                }
              }
              function c(e2) {
                var t2 = new DataView(e2);
                if (p && console.log("Got file of length " + e2.byteLength), 255 != t2.getUint8(0) || 216 != t2.getUint8(1)) {
                  return p && console.log("Not a valid JPEG"), false;
                }
                for (var n3 = 2, r2 = e2.byteLength, i2 = function(e3, t3) {
                  return 56 === e3.getUint8(t3) && 66 === e3.getUint8(t3 + 1) && 73 === e3.getUint8(t3 + 2) && 77 === e3.getUint8(t3 + 3) && 4 === e3.getUint8(t3 + 4) && 4 === e3.getUint8(t3 + 5);
                }; r2 > n3; ) {
                  if (i2(t2, n3)) {
                    var o2 = t2.getUint8(n3 + 7);
                    o2 % 2 !== 0 && (o2 += 1), 0 === o2 && (o2 = 4);
                    var a2 = n3 + 8 + o2, s2 = t2.getUint16(n3 + 6 + o2);
                    return l(e2, a2, s2);
                  }
                  n3++;
                }
              }
              function l(e2, t2, n3) {
                for (var r2, i2, o2, a2, s2, u2 = new DataView(e2), c2 = {}, l2 = t2; t2 + n3 > l2; ) {
                  28 === u2.getUint8(l2) && 2 === u2.getUint8(l2 + 1) && (a2 = u2.getUint8(l2 + 2), a2 in S && (o2 = u2.getInt16(l2 + 3), s2 = o2 + 5, i2 = S[a2], r2 = h(u2, l2 + 5, o2), c2.hasOwnProperty(i2) ? c2[i2] instanceof Array ? c2[i2].push(r2) : c2[i2] = [c2[i2], r2] : c2[i2] = r2)), l2++;
                }
                return c2;
              }
              function f(e2, t2, n3, r2, i2) {
                var o2, a2, s2, u2 = e2.getUint16(n3, !i2), c2 = {};
                for (s2 = 0; u2 > s2; s2++) {
                  o2 = n3 + 12 * s2 + 2, a2 = r2[e2.getUint16(o2, !i2)], !a2 && p && console.log("Unknown tag: " + e2.getUint16(o2, !i2)), c2[a2] = d(e2, o2, t2, n3, i2);
                }
                return c2;
              }
              function d(e2, t2, n3, r2, i2) {
                var o2, a2, s2, u2, c2, l2, f2 = e2.getUint16(t2 + 2, !i2), d2 = e2.getUint32(t2 + 4, !i2), g2 = e2.getUint32(t2 + 8, !i2) + n3;
                switch (f2) {
                  case 1:
                  case 7:
                    if (1 == d2) {
                      return e2.getUint8(t2 + 8, !i2);
                    }
                    for (o2 = d2 > 4 ? g2 : t2 + 8, a2 = [], u2 = 0; d2 > u2; u2++) {
                      a2[u2] = e2.getUint8(o2 + u2);
                    }
                    return a2;
                  case 2:
                    return o2 = d2 > 4 ? g2 : t2 + 8, h(e2, o2, d2 - 1);
                  case 3:
                    if (1 == d2) {
                      return e2.getUint16(t2 + 8, !i2);
                    }
                    for (o2 = d2 > 2 ? g2 : t2 + 8, a2 = [], u2 = 0; d2 > u2; u2++) {
                      a2[u2] = e2.getUint16(o2 + 2 * u2, !i2);
                    }
                    return a2;
                  case 4:
                    if (1 == d2) {
                      return e2.getUint32(t2 + 8, !i2);
                    }
                    for (a2 = [], u2 = 0; d2 > u2; u2++) {
                      a2[u2] = e2.getUint32(g2 + 4 * u2, !i2);
                    }
                    return a2;
                  case 5:
                    if (1 == d2) {
                      return c2 = e2.getUint32(g2, !i2), l2 = e2.getUint32(g2 + 4, !i2), s2 = new Number(c2 / l2), s2.numerator = c2, s2.denominator = l2, s2;
                    }
                    for (a2 = [], u2 = 0; d2 > u2; u2++) {
                      c2 = e2.getUint32(g2 + 8 * u2, !i2), l2 = e2.getUint32(g2 + 4 + 8 * u2, !i2), a2[u2] = new Number(c2 / l2), a2[u2].numerator = c2, a2[u2].denominator = l2;
                    }
                    return a2;
                  case 9:
                    if (1 == d2) {
                      return e2.getInt32(t2 + 8, !i2);
                    }
                    for (a2 = [], u2 = 0; d2 > u2; u2++) {
                      a2[u2] = e2.getInt32(g2 + 4 * u2, !i2);
                    }
                    return a2;
                  case 10:
                    if (1 == d2) {
                      return e2.getInt32(g2, !i2) / e2.getInt32(g2 + 4, !i2);
                    }
                    for (a2 = [], u2 = 0; d2 > u2; u2++) {
                      a2[u2] = e2.getInt32(g2 + 8 * u2, !i2) / e2.getInt32(g2 + 4 + 8 * u2, !i2);
                    }
                    return a2;
                }
              }
              function h(e2, t2, n3) {
                var r2, i2 = "";
                for (r2 = t2; t2 + n3 > r2; r2++) {
                  i2 += String.fromCharCode(e2.getUint8(r2));
                }
                return i2;
              }
              function g(e2, t2) {
                if ("Exif" != h(e2, t2, 4)) {
                  return p && console.log("Not valid EXIF data! " + h(e2, t2, 4)), false;
                }
                var n3, r2, i2, o2, a2, s2 = t2 + 6;
                if (18761 == e2.getUint16(s2)) {
                  n3 = false;
                } else {
                  if (19789 != e2.getUint16(s2)) {
                    return p && console.log("Not valid TIFF data! (no 0x4949 or 0x4D4D)"), false;
                  }
                  n3 = true;
                }
                if (42 != e2.getUint16(s2 + 2, !n3)) {
                  return p && console.log("Not valid TIFF data! (no 0x002A)"), false;
                }
                var u2 = e2.getUint32(s2 + 4, !n3);
                if (8 > u2) {
                  return p && console.log("Not valid TIFF data! (First offset less than 8)", e2.getUint32(s2 + 4, !n3)), false;
                }
                if (r2 = f(e2, s2, s2 + u2, v, n3), r2.ExifIFDPointer) {
                  o2 = f(e2, s2, s2 + r2.ExifIFDPointer, w, n3);
                  for (i2 in o2) {
                    switch (i2) {
                      case "LightSource":
                      case "Flash":
                      case "MeteringMode":
                      case "ExposureProgram":
                      case "SensingMethod":
                      case "SceneCaptureType":
                      case "SceneType":
                      case "CustomRendered":
                      case "WhiteBalance":
                      case "GainControl":
                      case "Contrast":
                      case "Saturation":
                      case "Sharpness":
                      case "SubjectDistanceRange":
                      case "FileSource":
                        o2[i2] = b[i2][o2[i2]];
                        break;
                      case "ExifVersion":
                      case "FlashpixVersion":
                        o2[i2] = String.fromCharCode(o2[i2][0], o2[i2][1], o2[i2][2], o2[i2][3]);
                        break;
                      case "ComponentsConfiguration":
                        o2[i2] = b.Components[o2[i2][0]] + b.Components[o2[i2][1]] + b.Components[o2[i2][2]] + b.Components[o2[i2][3]];
                    }
                    r2[i2] = o2[i2];
                  }
                }
                if (r2.GPSInfoIFDPointer) {
                  a2 = f(e2, s2, s2 + r2.GPSInfoIFDPointer, y, n3);
                  for (i2 in a2) {
                    switch (i2) {
                      case "GPSVersionID":
                        a2[i2] = a2[i2][0] + "." + a2[i2][1] + "." + a2[i2][2] + "." + a2[i2][3];
                    }
                    r2[i2] = a2[i2];
                  }
                }
                return r2;
              }
              var p = false, m = function(e2) {
                return e2 instanceof m ? e2 : this instanceof m ? void (this.EXIFwrapped = e2) : new m(e2);
              };
              "undefined" != typeof e && e.exports && (t = e.exports = m), t.EXIF = m;
              var w = m.Tags = { 36864: "ExifVersion", 40960: "FlashpixVersion", 40961: "ColorSpace", 40962: "PixelXDimension", 40963: "PixelYDimension", 37121: "ComponentsConfiguration", 37122: "CompressedBitsPerPixel", 37500: "MakerNote", 37510: "UserComment", 40964: "RelatedSoundFile", 36867: "DateTimeOriginal", 36868: "DateTimeDigitized", 37520: "SubsecTime", 37521: "SubsecTimeOriginal", 37522: "SubsecTimeDigitized", 33434: "ExposureTime", 33437: "FNumber", 34850: "ExposureProgram", 34852: "SpectralSensitivity", 34855: "ISOSpeedRatings", 34856: "OECF", 37377: "ShutterSpeedValue", 37378: "ApertureValue", 37379: "BrightnessValue", 37380: "ExposureBias", 37381: "MaxApertureValue", 37382: "SubjectDistance", 37383: "MeteringMode", 37384: "LightSource", 37385: "Flash", 37396: "SubjectArea", 37386: "FocalLength", 41483: "FlashEnergy", 41484: "SpatialFrequencyResponse", 41486: "FocalPlaneXResolution", 41487: "FocalPlaneYResolution", 41488: "FocalPlaneResolutionUnit", 41492: "SubjectLocation", 41493: "ExposureIndex", 41495: "SensingMethod", 41728: "FileSource", 41729: "SceneType", 41730: "CFAPattern", 41985: "CustomRendered", 41986: "ExposureMode", 41987: "WhiteBalance", 41988: "DigitalZoomRation", 41989: "FocalLengthIn35mmFilm", 41990: "SceneCaptureType", 41991: "GainControl", 41992: "Contrast", 41993: "Saturation", 41994: "Sharpness", 41995: "DeviceSettingDescription", 41996: "SubjectDistanceRange", 40965: "InteroperabilityIFDPointer", 42016: "ImageUniqueID" }, v = m.TiffTags = { 256: "ImageWidth", 257: "ImageHeight", 34665: "ExifIFDPointer", 34853: "GPSInfoIFDPointer", 40965: "InteroperabilityIFDPointer", 258: "BitsPerSample", 259: "Compression", 262: "PhotometricInterpretation", 274: "Orientation", 277: "SamplesPerPixel", 284: "PlanarConfiguration", 530: "YCbCrSubSampling", 531: "YCbCrPositioning", 282: "XResolution", 283: "YResolution", 296: "ResolutionUnit", 273: "StripOffsets", 278: "RowsPerStrip", 279: "StripByteCounts", 513: "JPEGInterchangeFormat", 514: "JPEGInterchangeFormatLength", 301: "TransferFunction", 318: "WhitePoint", 319: "PrimaryChromaticities", 529: "YCbCrCoefficients", 532: "ReferenceBlackWhite", 306: "DateTime", 270: "ImageDescription", 271: "Make", 272: "Model", 305: "Software", 315: "Artist", 33432: "Copyright" }, y = m.GPSTags = { 0: "GPSVersionID", 1: "GPSLatitudeRef", 2: "GPSLatitude", 3: "GPSLongitudeRef", 4: "GPSLongitude", 5: "GPSAltitudeRef", 6: "GPSAltitude", 7: "GPSTimeStamp", 8: "GPSSatellites", 9: "GPSStatus", 10: "GPSMeasureMode", 11: "GPSDOP", 12: "GPSSpeedRef", 13: "GPSSpeed", 14: "GPSTrackRef", 15: "GPSTrack", 16: "GPSImgDirectionRef", 17: "GPSImgDirection", 18: "GPSMapDatum", 19: "GPSDestLatitudeRef", 20: "GPSDestLatitude", 21: "GPSDestLongitudeRef", 22: "GPSDestLongitude", 23: "GPSDestBearingRef", 24: "GPSDestBearing", 25: "GPSDestDistanceRef", 26: "GPSDestDistance", 27: "GPSProcessingMethod", 28: "GPSAreaInformation", 29: "GPSDateStamp", 30: "GPSDifferential" }, b = m.StringValues = { ExposureProgram: { 0: "Not defined", 1: "Manual", 2: "Normal program", 3: "Aperture priority", 4: "Shutter priority", 5: "Creative program", 6: "Action program", 7: "Portrait mode", 8: "Landscape mode" }, MeteringMode: { 0: "Unknown", 1: "Average", 2: "CenterWeightedAverage", 3: "Spot", 4: "MultiSpot", 5: "Pattern", 6: "Partial", 255: "Other" }, LightSource: { 0: "Unknown", 1: "Daylight", 2: "Fluorescent", 3: "Tungsten (incandescent light)", 4: "Flash", 9: "Fine weather", 10: "Cloudy weather", 11: "Shade", 12: "Daylight fluorescent (D 5700 - 7100K)", 13: "Day white fluorescent (N 4600 - 5400K)", 14: "Cool white fluorescent (W 3900 - 4500K)", 15: "White fluorescent (WW 3200 - 3700K)", 17: "Standard light A", 18: "Standard light B", 19: "Standard light C", 20: "D55", 21: "D65", 22: "D75", 23: "D50", 24: "ISO studio tungsten", 255: "Other" }, Flash: { 0: "Flash did not fire", 1: "Flash fired", 5: "Strobe return light not detected", 7: "Strobe return light detected", 9: "Flash fired, compulsory flash mode", 13: "Flash fired, compulsory flash mode, return light not detected", 15: "Flash fired, compulsory flash mode, return light detected", 16: "Flash did not fire, compulsory flash mode", 24: "Flash did not fire, auto mode", 25: "Flash fired, auto mode", 29: "Flash fired, auto mode, return light not detected", 31: "Flash fired, auto mode, return light detected", 32: "No flash function", 65: "Flash fired, red-eye reduction mode", 69: "Flash fired, red-eye reduction mode, return light not detected", 71: "Flash fired, red-eye reduction mode, return light detected", 73: "Flash fired, compulsory flash mode, red-eye reduction mode", 77: "Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected", 79: "Flash fired, compulsory flash mode, red-eye reduction mode, return light detected", 89: "Flash fired, auto mode, red-eye reduction mode", 93: "Flash fired, auto mode, return light not detected, red-eye reduction mode", 95: "Flash fired, auto mode, return light detected, red-eye reduction mode" }, SensingMethod: { 1: "Not defined", 2: "One-chip color area sensor", 3: "Two-chip color area sensor", 4: "Three-chip color area sensor", 5: "Color sequential area sensor", 7: "Trilinear sensor", 8: "Color sequential linear sensor" }, SceneCaptureType: { 0: "Standard", 1: "Landscape", 2: "Portrait", 3: "Night scene" }, SceneType: { 1: "Directly photographed" }, CustomRendered: { 0: "Normal process", 1: "Custom process" }, WhiteBalance: { 0: "Auto white balance", 1: "Manual white balance" }, GainControl: { 0: "None", 1: "Low gain up", 2: "High gain up", 3: "Low gain down", 4: "High gain down" }, Contrast: { 0: "Normal", 1: "Soft", 2: "Hard" }, Saturation: { 0: "Normal", 1: "Low saturation", 2: "High saturation" }, Sharpness: { 0: "Normal", 1: "Soft", 2: "Hard" }, SubjectDistanceRange: { 0: "Unknown", 1: "Macro", 2: "Close view", 3: "Distant view" }, FileSource: { 3: "DSC" }, Components: { 0: "", 1: "Y", 2: "Cb", 3: "Cr", 4: "R", 5: "G", 6: "B" } }, S = { 120: "caption", 110: "credit", 25: "keywords", 55: "dateCreated", 80: "byline", 85: "bylineTitle", 122: "captionWriter", 105: "headline", 116: "copyright", 15: "category" };
              m.getData = function(e2, t2) {
                return (e2 instanceof Image || e2 instanceof HTMLImageElement) && !e2.complete ? false : (n2(e2) ? t2 && t2.call(e2) : s(e2, t2), true);
              }, m.getTag = function(e2, t2) {
                return n2(e2) ? e2.exifdata[t2] : void 0;
              }, m.getAllTags = function(e2) {
                if (!n2(e2)) {
                  return {};
                }
                var t2, r2 = e2.exifdata, i2 = {};
                for (t2 in r2) {
                  r2.hasOwnProperty(t2) && (i2[t2] = r2[t2]);
                }
                return i2;
              }, m.pretty = function(e2) {
                if (!n2(e2)) {
                  return "";
                }
                var t2, r2 = e2.exifdata, i2 = "";
                for (t2 in r2) {
                  r2.hasOwnProperty(t2) && (i2 += "object" == typeof r2[t2] ? r2[t2] instanceof Number ? t2 + " : " + r2[t2] + " [" + r2[t2].numerator + "/" + r2[t2].denominator + "]\r\n" : t2 + " : [" + r2[t2].length + " values]\r\n" : t2 + " : " + r2[t2] + "\r\n");
                }
                return i2;
              }, m.readFromBinaryFile = function(e2) {
                return u(e2);
              }, r = [], i = function() {
                return m;
              }.apply(t, r), !(void 0 !== i && (e.exports = i));
            }).call(this);
          }, function(e, t, n) {
            var r, i;
            !function() {
              function n2(e2) {
                var t2 = e2.naturalWidth, n3 = e2.naturalHeight;
                if (t2 * n3 > 1048576) {
                  var r2 = document.createElement("canvas");
                  r2.width = r2.height = 1;
                  var i2 = r2.getContext("2d");
                  return i2.drawImage(e2, -t2 + 1, 0), 0 === i2.getImageData(0, 0, 1, 1).data[3];
                }
                return false;
              }
              function o(e2, t2, n3) {
                var r2 = document.createElement("canvas");
                r2.width = 1, r2.height = n3;
                var i2 = r2.getContext("2d");
                i2.drawImage(e2, 0, 0);
                for (var o2 = i2.getImageData(0, 0, 1, n3).data, a2 = 0, s2 = n3, u2 = n3; u2 > a2; ) {
                  var c2 = o2[4 * (u2 - 1) + 3];
                  0 === c2 ? s2 = u2 : a2 = u2, u2 = s2 + a2 >> 1;
                }
                var l = u2 / n3;
                return 0 === l ? 1 : l;
              }
              function a(e2, t2, n3) {
                var r2 = document.createElement("canvas");
                return s(e2, r2, t2, n3), r2.toDataURL("image/jpeg", t2.quality || 0.8);
              }
              function s(e2, t2, r2, i2) {
                var a2 = e2.naturalWidth, s2 = e2.naturalHeight, c2 = r2.width, l = r2.height, f = t2.getContext("2d");
                f.save(), u(t2, f, c2, l, r2.orientation);
                var d = n2(e2);
                d && (a2 /= 2, s2 /= 2);
                var h = 1024, g = document.createElement("canvas");
                g.width = g.height = h;
                for (var p = g.getContext("2d"), m = i2 ? o(e2, a2, s2) : 1, w = Math.ceil(h * c2 / a2), v = Math.ceil(h * l / s2 / m), y = 0, b = 0; s2 > y; ) {
                  for (var S = 0, I = 0; a2 > S; ) {
                    p.clearRect(0, 0, h, h), p.drawImage(e2, -S, -y), f.drawImage(g, 0, 0, h, h, I, b, w, v), S += h, I += w;
                  }
                  y += h, b += v;
                }
                f.restore(), g = p = null;
              }
              function u(e2, t2, n3, r2, i2) {
                switch (i2) {
                  case 5:
                  case 6:
                  case 7:
                  case 8:
                    e2.width = r2, e2.height = n3;
                    break;
                  default:
                    e2.width = n3, e2.height = r2;
                }
                switch (i2) {
                  case 2:
                    t2.translate(n3, 0), t2.scale(-1, 1);
                    break;
                  case 3:
                    t2.translate(n3, r2), t2.rotate(Math.PI);
                    break;
                  case 4:
                    t2.translate(0, r2), t2.scale(1, -1);
                    break;
                  case 5:
                    t2.rotate(0.5 * Math.PI), t2.scale(1, -1);
                    break;
                  case 6:
                    t2.rotate(0.5 * Math.PI), t2.translate(0, -r2);
                    break;
                  case 7:
                    t2.rotate(0.5 * Math.PI), t2.translate(n3, -r2), t2.scale(-1, 1);
                    break;
                  case 8:
                    t2.rotate(-0.5 * Math.PI), t2.translate(-n3, 0);
                }
              }
              function c(e2) {
                if (window.Blob && e2 instanceof Blob) {
                  var t2 = new Image(), n3 = window.URL && window.URL.createObjectURL ? window.URL : window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;
                  if (!n3) {
                    throw Error("No createObjectURL function found to create blob url");
                  }
                  t2.src = n3.createObjectURL(e2), this.blob = e2, e2 = t2;
                }
                if (!e2.naturalWidth && !e2.naturalHeight) {
                  var r2 = this;
                  e2.onload = function() {
                    var e3 = r2.imageLoadListeners;
                    if (e3) {
                      r2.imageLoadListeners = null;
                      for (var t3 = 0, n4 = e3.length; n4 > t3; t3++) {
                        e3[t3]();
                      }
                    }
                  }, this.imageLoadListeners = [];
                }
                this.srcImage = e2;
              }
              c.prototype.render = function(e2, t2, n3) {
                if (this.imageLoadListeners) {
                  var r2 = this;
                  return void this.imageLoadListeners.push(function() {
                    r2.render(e2, t2, n3);
                  });
                }
                t2 = t2 || {};
                var i2 = this.srcImage, o2 = i2.src, u2 = o2.length, c2 = i2.naturalWidth, l = i2.naturalHeight, f = t2.width, d = t2.height, h = t2.maxWidth, g = t2.maxHeight, p = this.blob && "image/jpeg" === this.blob.type || 0 === o2.indexOf("data:image/jpeg") || o2.indexOf(".jpg") === u2 - 4 || o2.indexOf(".jpeg") === u2 - 5;
                f && !d ? d = l * f / c2 << 0 : d && !f ? f = c2 * d / l << 0 : (f = c2, d = l), h && f > h && (f = h, d = l * f / c2 << 0), g && d > g && (d = g, f = c2 * d / l << 0);
                var m = { width: f, height: d };
                for (var w in t2) {
                  m[w] = t2[w];
                }
                var v = e2.tagName.toLowerCase();
                "img" === v ? e2.src = a(this.srcImage, m, p) : "canvas" === v && s(this.srcImage, e2, m, p), "function" == typeof this.onrender && this.onrender(e2), n3 && n3();
              }, r = [], i = function() {
                return c;
              }.apply(t, r), !(void 0 !== i && (e.exports = i));
            }();
          }, function(e, t) {
            function n(e2) {
              function t2(e3) {
                for (var t3 = [16, 11, 10, 16, 24, 40, 51, 61, 12, 12, 14, 19, 26, 58, 60, 55, 14, 13, 16, 24, 40, 57, 69, 56, 14, 17, 22, 29, 51, 87, 80, 62, 18, 22, 37, 56, 68, 109, 103, 77, 24, 35, 55, 64, 81, 104, 113, 92, 49, 64, 78, 87, 103, 121, 120, 101, 72, 92, 95, 98, 112, 100, 103, 99], n3 = 0; 64 > n3; n3++) {
                  var r2 = F((t3[n3] * e3 + 50) / 100);
                  1 > r2 ? r2 = 1 : r2 > 255 && (r2 = 255), D[N[n3]] = r2;
                }
                for (var i2 = [17, 18, 24, 47, 99, 99, 99, 99, 18, 21, 26, 66, 99, 99, 99, 99, 24, 26, 56, 99, 99, 99, 99, 99, 47, 66, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99], o2 = 0; 64 > o2; o2++) {
                  var a2 = F((i2[o2] * e3 + 50) / 100);
                  1 > a2 ? a2 = 1 : a2 > 255 && (a2 = 255), x[N[o2]] = a2;
                }
                for (var s2 = [1, 1.387039845, 1.306562965, 1.175875602, 1, 0.785694958, 0.5411961, 0.275899379], u2 = 0, c2 = 0; 8 > c2; c2++) {
                  for (var l2 = 0; 8 > l2; l2++) {
                    U[u2] = 1 / (D[N[u2]] * s2[c2] * s2[l2] * 8), C[u2] = 1 / (x[N[u2]] * s2[c2] * s2[l2] * 8), u2++;
                  }
                }
              }
              function n2(e3, t3) {
                for (var n3 = 0, r2 = 0, i2 = new Array(), o2 = 1; 16 >= o2; o2++) {
                  for (var a2 = 1; a2 <= e3[o2]; a2++) {
                    i2[t3[r2]] = [], i2[t3[r2]][0] = n3, i2[t3[r2]][1] = o2, r2++, n3++;
                  }
                  n3 *= 2;
                }
                return i2;
              }
              function r() {
                y = n2(W, H), b = n2(V, X), S = n2(z, q), I = n2(Q, Y);
              }
              function i() {
                for (var e3 = 1, t3 = 2, n3 = 1; 15 >= n3; n3++) {
                  for (var r2 = e3; t3 > r2; r2++) {
                    A[32767 + r2] = n3, T[32767 + r2] = [], T[32767 + r2][1] = n3, T[32767 + r2][0] = r2;
                  }
                  for (var i2 = -(t3 - 1); -e3 >= i2; i2++) {
                    A[32767 + i2] = n3, T[32767 + i2] = [], T[32767 + i2][1] = n3, T[32767 + i2][0] = t3 - 1 + i2;
                  }
                  e3 <<= 1, t3 <<= 1;
                }
              }
              function o() {
                for (var e3 = 0; 256 > e3; e3++) {
                  k[e3] = 19595 * e3, k[e3 + 256 >> 0] = 38470 * e3, k[e3 + 512 >> 0] = 7471 * e3 + 32768, k[e3 + 768 >> 0] = -11059 * e3, k[e3 + 1024 >> 0] = -21709 * e3, k[e3 + 1280 >> 0] = 32768 * e3 + 8421375, k[e3 + 1536 >> 0] = -27439 * e3, k[e3 + 1792 >> 0] = -5329 * e3;
                }
              }
              function a(e3) {
                for (var t3 = e3[0], n3 = e3[1] - 1; n3 >= 0; ) {
                  t3 & 1 << n3 && (G |= 1 << O), n3--, O--, 0 > O && (255 == G ? (s(255), s(0)) : s(G), O = 7, G = 0);
                }
              }
              function s(e3) {
                M.push(j[e3]);
              }
              function u(e3) {
                s(e3 >> 8 & 255), s(255 & e3);
              }
              function c(e3, t3) {
                var n3, r2, i2, o2, a2, s2, u2, c2, l2, f2 = 0;
                var d2 = 8, h2 = 64;
                for (l2 = 0; d2 > l2; ++l2) {
                  n3 = e3[f2], r2 = e3[f2 + 1], i2 = e3[f2 + 2], o2 = e3[f2 + 3], a2 = e3[f2 + 4], s2 = e3[f2 + 5], u2 = e3[f2 + 6], c2 = e3[f2 + 7];
                  var g2 = n3 + c2, p2 = n3 - c2, m2 = r2 + u2, w2 = r2 - u2, v2 = i2 + s2, y2 = i2 - s2, b2 = o2 + a2, S2 = o2 - a2, I2 = g2 + b2, P2 = g2 - b2, F2 = m2 + v2, D2 = m2 - v2;
                  e3[f2] = I2 + F2, e3[f2 + 4] = I2 - F2;
                  var x2 = 0.707106781 * (D2 + P2);
                  e3[f2 + 2] = P2 + x2, e3[f2 + 6] = P2 - x2, I2 = S2 + y2, F2 = y2 + w2, D2 = w2 + p2;
                  var U2 = 0.382683433 * (I2 - D2), C2 = 0.5411961 * I2 + U2, T2 = 1.306562965 * D2 + U2, A2 = 0.707106781 * F2, R2 = p2 + A2, M2 = p2 - A2;
                  e3[f2 + 5] = M2 + C2, e3[f2 + 3] = M2 - C2, e3[f2 + 1] = R2 + T2, e3[f2 + 7] = R2 - T2, f2 += 8;
                }
                for (f2 = 0, l2 = 0; d2 > l2; ++l2) {
                  n3 = e3[f2], r2 = e3[f2 + 8], i2 = e3[f2 + 16], o2 = e3[f2 + 24], a2 = e3[f2 + 32], s2 = e3[f2 + 40], u2 = e3[f2 + 48], c2 = e3[f2 + 56];
                  var G2 = n3 + c2, O2 = n3 - c2, _2 = r2 + u2, B2 = r2 - u2, E2 = i2 + s2, j2 = i2 - s2, k2 = o2 + a2, N2 = o2 - a2, W2 = G2 + k2, H2 = G2 - k2, z2 = _2 + E2, q2 = _2 - E2;
                  e3[f2] = W2 + z2, e3[f2 + 32] = W2 - z2;
                  var V2 = 0.707106781 * (q2 + H2);
                  e3[f2 + 16] = H2 + V2, e3[f2 + 48] = H2 - V2, W2 = N2 + j2, z2 = j2 + B2, q2 = B2 + O2;
                  var X2 = 0.382683433 * (W2 - q2), Q2 = 0.5411961 * W2 + X2, Y2 = 1.306562965 * q2 + X2, K = 0.707106781 * z2, J = O2 + K, Z = O2 - K;
                  e3[f2 + 40] = Z + Q2, e3[f2 + 24] = Z - Q2, e3[f2 + 8] = J + Y2, e3[f2 + 56] = J - Y2, f2++;
                }
                var $;
                for (l2 = 0; h2 > l2; ++l2) {
                  $ = e3[l2] * t3[l2], L[l2] = $ > 0 ? $ + 0.5 | 0 : $ - 0.5 | 0;
                }
                return L;
              }
              function l() {
                u(65504), u(16), s(74), s(70), s(73), s(70), s(0), s(1), s(1), s(0), u(1), u(1), s(0), s(0);
              }
              function f(e3, t3) {
                u(65472), u(17), s(8), u(t3), u(e3), s(3), s(1), s(17), s(0), s(2), s(17), s(1), s(3), s(17), s(1);
              }
              function d() {
                u(65499), u(132), s(0);
                for (var e3 = 0; 64 > e3; e3++) {
                  s(D[e3]);
                }
                s(1);
                for (var t3 = 0; 64 > t3; t3++) {
                  s(x[t3]);
                }
              }
              function h() {
                u(65476), u(418), s(0);
                for (var e3 = 0; 16 > e3; e3++) {
                  s(W[e3 + 1]);
                }
                for (var t3 = 0; 11 >= t3; t3++) {
                  s(H[t3]);
                }
                s(16);
                for (var n3 = 0; 16 > n3; n3++) {
                  s(z[n3 + 1]);
                }
                for (var r2 = 0; 161 >= r2; r2++) {
                  s(q[r2]);
                }
                s(1);
                for (var i2 = 0; 16 > i2; i2++) {
                  s(V[i2 + 1]);
                }
                for (var o2 = 0; 11 >= o2; o2++) {
                  s(X[o2]);
                }
                s(17);
                for (var a2 = 0; 16 > a2; a2++) {
                  s(Q[a2 + 1]);
                }
                for (var c2 = 0; 161 >= c2; c2++) {
                  s(Y[c2]);
                }
              }
              function g() {
                u(65498), u(12), s(3), s(1), s(0), s(2), s(17), s(3), s(17), s(0), s(63), s(0);
              }
              function p(e3, t3, n3, r2, i2) {
                var o2, s2 = i2[0], u2 = i2[240];
                var l2 = 16, f2 = 63, d2 = 64;
                for (var h2 = c(e3, t3), g2 = 0; d2 > g2; ++g2) {
                  R[N[g2]] = h2[g2];
                }
                var p2 = R[0] - n3;
                n3 = R[0], 0 == p2 ? a(r2[0]) : (o2 = 32767 + p2, a(r2[A[o2]]), a(T[o2]));
                for (var m2 = 63; m2 > 0 && 0 == R[m2]; m2--) {
                }
                if (0 == m2) {
                  return a(s2), n3;
                }
                for (var w2, v2 = 1; m2 >= v2; ) {
                  for (var y2 = v2; 0 == R[v2] && m2 >= v2; ++v2) {
                  }
                  var b2 = v2 - y2;
                  if (b2 >= l2) {
                    w2 = b2 >> 4;
                    for (var S2 = 1; w2 >= S2; ++S2) {
                      a(u2);
                    }
                    b2 = 15 & b2;
                  }
                  o2 = 32767 + R[v2], a(i2[(b2 << 4) + A[o2]]), a(T[o2]), v2++;
                }
                return m2 != f2 && a(s2), n3;
              }
              function m() {
                for (var e3 = String.fromCharCode, t3 = 0; 256 > t3; t3++) {
                  j[t3] = e3(t3);
                }
              }
              function w(e3) {
                if (0 >= e3 && (e3 = 1), e3 > 100 && (e3 = 100), P != e3) {
                  var n3 = 0;
                  n3 = 50 > e3 ? Math.floor(5e3 / e3) : Math.floor(200 - 2 * e3), t2(n3), P = e3;
                }
              }
              function v() {
                var t3 = new Date().getTime();
                e2 || (e2 = 50), m(), r(), i(), o(), w(e2);
                new Date().getTime() - t3;
              }
              var y, b, S, I, P, F = (Math.round, Math.floor), D = new Array(64), x = new Array(64), U = new Array(64), C = new Array(64), T = new Array(65535), A = new Array(65535), L = new Array(64), R = new Array(64), M = [], G = 0, O = 7, _ = new Array(64), B = new Array(64), E = new Array(64), j = new Array(256), k = new Array(2048), N = [0, 1, 5, 6, 14, 15, 27, 28, 2, 4, 7, 13, 16, 26, 29, 42, 3, 8, 12, 17, 25, 30, 41, 43, 9, 11, 18, 24, 31, 40, 44, 53, 10, 19, 23, 32, 39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60, 21, 34, 37, 47, 50, 56, 59, 61, 35, 36, 48, 49, 57, 58, 62, 63], W = [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], H = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], z = [0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 125], q = [1, 2, 3, 0, 4, 17, 5, 18, 33, 49, 65, 6, 19, 81, 97, 7, 34, 113, 20, 50, 129, 145, 161, 8, 35, 66, 177, 193, 21, 82, 209, 240, 36, 51, 98, 114, 130, 9, 10, 22, 23, 24, 25, 26, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], V = [0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], X = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], Q = [0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 119], Y = [0, 1, 2, 3, 17, 4, 5, 33, 49, 6, 18, 65, 81, 7, 97, 113, 19, 34, 50, 129, 8, 20, 66, 145, 161, 177, 193, 9, 35, 51, 82, 240, 21, 98, 114, 209, 10, 22, 36, 52, 225, 37, 241, 23, 24, 25, 26, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250];
              this.encode = function(e3, t3, n3) {
                var r2 = new Date().getTime();
                t3 && w(t3), M = new Array(), G = 0, O = 7, u(65496), l(), d(), f(e3.width, e3.height), h(), g();
                var i2 = 0, o2 = 0, s2 = 0;
                G = 0, O = 7, this.encode.displayName = "_encode_";
                for (var c2, m2, v2, P2, F2, D2, x2, T2, A2, L2 = e3.data, R2 = e3.width, j2 = e3.height, N2 = 4 * R2, W2 = 0; j2 > W2; ) {
                  for (c2 = 0; N2 > c2; ) {
                    for (F2 = N2 * W2 + c2, D2 = F2, x2 = -1, T2 = 0, A2 = 0; 64 > A2; A2++) {
                      T2 = A2 >> 3, x2 = 4 * (7 & A2), D2 = F2 + T2 * N2 + x2, W2 + T2 >= j2 && (D2 -= N2 * (W2 + 1 + T2 - j2)), c2 + x2 >= N2 && (D2 -= c2 + x2 - N2 + 4), m2 = L2[D2++], v2 = L2[D2++], P2 = L2[D2++], _[A2] = (k[m2] + k[v2 + 256 >> 0] + k[P2 + 512 >> 0] >> 16) - 128, B[A2] = (k[m2 + 768 >> 0] + k[v2 + 1024 >> 0] + k[P2 + 1280 >> 0] >> 16) - 128, E[A2] = (k[m2 + 1280 >> 0] + k[v2 + 1536 >> 0] + k[P2 + 1792 >> 0] >> 16) - 128;
                    }
                    i2 = p(_, U, i2, y, S), o2 = p(B, C, o2, b, I), s2 = p(E, C, s2, b, I), c2 += 32;
                  }
                  W2 += 8;
                }
                if (O >= 0) {
                  var H2 = [];
                  H2[1] = O + 1, H2[0] = (1 << O + 1) - 1, a(H2);
                }
                if (u(65497), n3) {
                  for (var z2 = M.length, q2 = new Uint8Array(z2), V2 = 0; z2 > V2; V2++) {
                    q2[V2] = M[V2].charCodeAt();
                  }
                  M = [];
                  new Date().getTime() - r2;
                  return q2;
                }
                var X2 = "data:image/jpeg;base64," + btoa(M.join(""));
                M = [];
                new Date().getTime() - r2;
                return X2;
              }, v();
            }
            e.exports = n;
          }, function(e, t, n) {
            function r(e2, t2) {
              var n2 = this;
              if (!e2) {
                throw new Error("没有收到图片，可能的解决方案：https://github.com/think2011/localResizeIMG/issues/7");
              }
              t2 = t2 || {}, n2.defaults = { width: null, height: null, fieldName: "file", quality: 0.7 }, n2.file = e2;
              for (var r2 in t2) {
                t2.hasOwnProperty(r2) && (n2.defaults[r2] = t2[r2]);
              }
              return this.init();
            }
            function i(e2) {
              var t2 = null;
              return t2 = e2 ? [].filter.call(document.scripts, function(t3) {
                return -1 !== t3.src.indexOf(e2);
              })[0] : document.scripts[document.scripts.length - 1], t2 ? t2.src.substr(0, t2.src.lastIndexOf("/")) : null;
            }
            function o(e2) {
              var t2;
              t2 = e2.split(",")[0].indexOf("base64") >= 0 ? atob(e2.split(",")[1]) : unescape(e2.split(",")[1]);
              for (var n2 = e2.split(",")[0].split(":")[1].split(";")[0], r2 = new Uint8Array(t2.length), i2 = 0; i2 < t2.length; i2++) {
                r2[i2] = t2.charCodeAt(i2);
              }
              return new s.Blob([r2.buffer], { type: n2 });
            }
            n.p = i("lrz") + "/", window.URL = window.URL || window.webkitURL;
            var a = n(1), s = n(4), u = n(5), c = function(e2) {
              var t2 = /OS (\d)_.* like Mac OS X/g.exec(e2), n2 = /Android (\d.*?);/g.exec(e2) || /Android\/(\d.*?) /g.exec(e2);
              return { oldIOS: t2 ? +t2.pop() < 8 : false, oldAndroid: n2 ? +n2.pop().substr(0, 3) < 4.5 : false, iOS: /\(i[^;]+;( U;)? CPU.+Mac OS X/.test(e2), android: /Android/g.test(e2), mQQBrowser: /MQQBrowser/g.test(e2) };
            }(navigator.userAgent);
            r.prototype.init = function() {
              var e2 = this, t2 = e2.file, n2 = "string" == typeof t2, r2 = /^data:/.test(t2), i2 = new Image(), u2 = document.createElement("canvas"), c2 = n2 ? t2 : URL.createObjectURL(t2);
              if (e2.img = i2, e2.blob = c2, e2.canvas = u2, n2 ? e2.fileName = r2 ? "base64.jpg" : t2.split("/").pop() : e2.fileName = t2.name, !document.createElement("canvas").getContext) {
                throw new Error("浏览器不支持canvas");
              }
              return new a(function(n3, a2) {
                i2.onerror = function() {
                  var e3 = new Error("加载图片文件失败");
                  throw a2(e3), e3;
                }, i2.onload = function() {
                  e2._getBase64().then(function(e3) {
                    if (e3.length < 10) {
                      var t3 = new Error("生成base64失败");
                      throw a2(t3), t3;
                    }
                    return e3;
                  }).then(function(r3) {
                    var i3 = null;
                    "object" == typeof e2.file && r3.length > e2.file.size ? (i3 = new FormData(), t2 = e2.file) : (i3 = new s.FormData(), t2 = o(r3)), i3.append(e2.defaults.fieldName, t2, e2.fileName.replace(/\..+/g, ".jpg")), n3({ formData: i3, fileLen: +t2.size, base64: r3, base64Len: r3.length, origin: e2.file, file: t2 });
                    for (var a3 in e2) {
                      e2.hasOwnProperty(a3) && (e2[a3] = null);
                    }
                    URL.revokeObjectURL(e2.blob);
                  });
                }, !r2 && (i2.crossOrigin = "*"), i2.src = c2;
              });
            }, r.prototype._getBase64 = function() {
              var e2 = this, t2 = e2.img, n2 = e2.file, r2 = e2.canvas;
              return new a(function(i2) {
                try {
                  u.getData("object" == typeof n2 ? n2 : t2, function() {
                    e2.orientation = u.getTag(this, "Orientation"), e2.resize = e2._getResize(), e2.ctx = r2.getContext("2d"), r2.width = e2.resize.width, r2.height = e2.resize.height, e2.ctx.fillStyle = "#fff", e2.ctx.fillRect(0, 0, r2.width, r2.height), c.oldIOS ? e2._createBase64ForOldIOS().then(i2) : e2._createBase64().then(i2);
                  });
                } catch (o2) {
                  throw new Error(o2);
                }
              });
            }, r.prototype._createBase64ForOldIOS = function() {
              var e2 = this, t2 = e2.img, r2 = e2.canvas, i2 = e2.defaults, o2 = e2.orientation;
              return new a(function(e3) {
                !function() {
                  var a2 = [n(6)];
                  (function(n2) {
                    var a3 = new n2(t2);
                    "5678".indexOf(o2) > -1 ? a3.render(r2, { width: r2.height, height: r2.width, orientation: o2 }) : a3.render(r2, { width: r2.width, height: r2.height, orientation: o2 }), e3(r2.toDataURL("image/jpeg", i2.quality));
                  }).apply(null, a2);
                }();
              });
            }, r.prototype._createBase64 = function() {
              var e2 = this, t2 = e2.resize, r2 = e2.img, i2 = e2.canvas, o2 = e2.ctx, s2 = e2.defaults, u2 = e2.orientation;
              switch (u2) {
                case 3:
                  o2.rotate(180 * Math.PI / 180), o2.drawImage(r2, -t2.width, -t2.height, t2.width, t2.height);
                  break;
                case 6:
                  o2.rotate(90 * Math.PI / 180), o2.drawImage(r2, 0, -t2.width, t2.height, t2.width);
                  break;
                case 8:
                  o2.rotate(270 * Math.PI / 180), o2.drawImage(r2, -t2.height, 0, t2.height, t2.width);
                  break;
                case 2:
                  o2.translate(t2.width, 0), o2.scale(-1, 1), o2.drawImage(r2, 0, 0, t2.width, t2.height);
                  break;
                case 4:
                  o2.translate(t2.width, 0), o2.scale(-1, 1), o2.rotate(180 * Math.PI / 180), o2.drawImage(r2, -t2.width, -t2.height, t2.width, t2.height);
                  break;
                case 5:
                  o2.translate(t2.width, 0), o2.scale(-1, 1), o2.rotate(90 * Math.PI / 180), o2.drawImage(r2, 0, -t2.width, t2.height, t2.width);
                  break;
                case 7:
                  o2.translate(t2.width, 0), o2.scale(-1, 1), o2.rotate(270 * Math.PI / 180), o2.drawImage(r2, -t2.height, 0, t2.height, t2.width);
                  break;
                default:
                  o2.drawImage(r2, 0, 0, t2.width, t2.height);
              }
              return new a(function(e3) {
                c.oldAndroid || c.mQQBrowser || !navigator.userAgent ? !function() {
                  var t3 = [n(7)];
                  (function(t4) {
                    var n2 = new t4(), r3 = o2.getImageData(0, 0, i2.width, i2.height);
                    e3(n2.encode(r3, 100 * s2.quality));
                  }).apply(null, t3);
                }() : e3(i2.toDataURL("image/jpeg", s2.quality));
              });
            }, r.prototype._getResize = function() {
              var e2 = this, t2 = e2.img, n2 = e2.defaults, r2 = n2.width, i2 = n2.height, o2 = e2.orientation, a2 = { width: t2.width, height: t2.height };
              if ("5678".indexOf(o2) > -1 && (a2.width = t2.height, a2.height = t2.width), a2.width < r2 || a2.height < i2) {
                return a2;
              }
              var s2 = a2.width / a2.height;
              for (r2 && i2 ? s2 >= r2 / i2 ? a2.width > r2 && (a2.width = r2, a2.height = Math.ceil(r2 / s2)) : a2.height > i2 && (a2.height = i2, a2.width = Math.ceil(i2 * s2)) : r2 ? r2 < a2.width && (a2.width = r2, a2.height = Math.ceil(r2 / s2)) : i2 && i2 < a2.height && (a2.width = Math.ceil(i2 * s2), a2.height = i2); a2.width >= 3264 || a2.height >= 2448; ) {
                a2.width *= 0.8, a2.height *= 0.8;
              }
              return a2;
            }, window.lrz = function(e2, t2) {
              return new r(e2, t2);
            }, window.lrz.version = "4.9.40", e.exports = window.lrz;
          }]);
        });
      });
      var template$3 = `<div> <div v-show="upload.status=='ready'"> <input type="text" v-model="imageUrl" maxlength="255" :placeholder="$parent.locale['please enter a url']"> <button type="button" @click="insertImageUrl">{{$parent.locale.save}}</button> <input type="file" ref="file" style="display: none !important" @change="process" accept="image/png,image/jpeg,image/gif,image/jpg"> <button type="button" @click="pick">{{$parent.locale.upload}}</button> </div> <div v-if="upload.status=='progress'"> {{$parent.locale.progress}}:{{upload.progressComputable ? $parent.locale.unknown : upload.complete}} </div> <div v-if="upload.status=='success'"> {{$parent.locale["please wait"]}}... </div> <div v-if="upload.status=='error'"> {{$parent.locale.error}}:{{upload.errorMsg}} <button type="button" @click="reset">{{$parent.locale.reset}}</button> </div> <div v-if="upload.status=='abort'"> {{$parent.locale.upload}}&nbsp;{{$parent.locale.abort}}, <button type="button" @click="reset">{{$parent.locale.reset}}</button> </div> </div> `;
      var dashboard$3 = {
        template: template$3,
        data: function data() {
          return {
            imageUrl: "",
            upload: {
              status: "ready",
              // progress,success,error,abort
              errorMsg: null,
              progressComputable: false,
              complete: 0
            }
          };
        },
        methods: {
          reset: function reset() {
            this.upload.status = "ready";
          },
          insertImageUrl: function insertImageUrl() {
            if (!this.imageUrl) {
              return;
            }
            this.$parent.execCommand(Command.INSERT_IMAGE, this.imageUrl);
            this.imageUrl = null;
          },
          pick: function pick() {
            this.$refs.file.click();
          },
          setUploadError: function setUploadError(msg) {
            this.upload.status = "error";
            this.upload.errorMsg = msg;
          },
          process: function process() {
            var this$1 = this;
            var component = this;
            var config = this.$options.module.config;
            if (!config.upload && typeof config.server === "string") {
              config.upload = { url: config.server };
            }
            if (config.upload && !config.upload.url) {
              config.upload = null;
            }
            if (config.upload && typeof config.fieldName === "string") {
              config.upload.fieldName = config.fieldName;
            }
            if (typeof config.compress === "boolean") {
              config.compress = {
                width: config.width,
                height: config.height,
                quality: config.quality
              };
            }
            var file = this.$refs.file.files[0];
            if (file.size > config.sizeLimit) {
              this.setUploadError(this.$parent.locale["exceed size limit"]);
              return;
            }
            this.$refs.file.value = null;
            if (config.compress) {
              config.compress.fieldName = config.upload && config.upload.fieldName ? config.upload.fieldName : "image";
              lrz_all_bundle(file, config.compress).then(function(rst) {
                if (config.upload) {
                  component.uploadToServer(rst.file);
                } else {
                  component.insertBase64(rst.base64);
                }
              }).catch(function(err) {
                this$1.setUploadError(err.toString());
              });
              return;
            }
            if (!config.upload) {
              var reader = new FileReader();
              reader.onload = function(e) {
                component.insertBase64(e.target.result);
              };
              reader.readAsDataURL(file);
              return;
            }
            component.uploadToServer(file);
          },
          insertBase64: function insertBase64(data) {
            this.$parent.execCommand(Command.INSERT_IMAGE, data);
          },
          uploadToServer: function uploadToServer(file) {
            var this$1 = this;
            var config = this.$options.module.config;
            var formData = new FormData();
            formData.append(config.upload.fieldName || "image", file);
            if (typeof config.upload.params === "object") {
              Object.keys(config.upload.params).forEach(function(key) {
                var value = config.upload.params[key];
                if (Array.isArray(value)) {
                  value.forEach(function(v) {
                    formData.append(key, v);
                  });
                } else {
                  formData.append(key, value);
                }
              });
            }
            var xhr = new XMLHttpRequest();
            xhr.onprogress = function(e) {
              this$1.upload.status = "progress";
              if (e.lengthComputable) {
                this$1.upload.progressComputable = true;
                var percentComplete = e.loaded / e.total;
                this$1.upload.complete = (percentComplete * 100).toFixed(2);
              } else {
                this$1.upload.progressComputable = false;
              }
            };
            xhr.onload = function() {
              if (xhr.status >= 300) {
                this$1.setUploadError("request error,code " + xhr.status);
                return;
              }
              try {
                var url = config.uploadHandler(xhr.responseText);
                if (url) {
                  this$1.$parent.execCommand(Command.INSERT_IMAGE, url);
                }
              } catch (err) {
                this$1.setUploadError(err.toString());
              } finally {
                this$1.upload.status = "ready";
              }
            };
            xhr.onerror = function() {
              this$1.setUploadError("request error");
            };
            xhr.onabort = function() {
              this$1.upload.status = "abort";
            };
            xhr.open("POST", config.upload.url);
            if (typeof config.upload.headers === "object") {
              Object.keys(config.upload.headers).forEach(function(k) {
                xhr.setRequestHeader(k, config.upload.headers[k]);
              });
            }
            xhr.send(formData);
          }
        }
      };
      var image = {
        name: "image",
        icon: "fa fa-file-image-o",
        i18n: "image",
        config: {
          // server: null,
          // fieldName: 'image',
          // compress: true,
          // width: 1600,
          // height: 1600,
          // quality: 80,
          sizeLimit: 512 * 1024,
          // 512k
          // upload: {
          //     url: null,
          //     headers: {},
          //     params: {},
          //     fieldName: {}
          // },
          compress: {
            width: 1600,
            height: 1600,
            quality: 80
          },
          uploadHandler: function uploadHandler(responseText) {
            var json = JSON.parse(responseText);
            return json.ok ? json.data : null;
          }
        },
        dashboard: dashboard$3
      };
      var template$4 = '<div> <h3 style="text-align: center">Vue-html5-editor&nbsp;{{version}}</h3> <p style="text-align: center"> repository: <a href="https://github.com/PeakTai/vue-html5-editor" target="_blank"> https://github.com/PeakTai/vue-html5-editor </a> </p> </div> ';
      var dashboard$4 = {
        template: template$4,
        data: function data() {
          return {
            version: "1.1.1"
          };
        }
      };
      var info = {
        name: "info",
        icon: "fa fa-info",
        i18n: "info",
        // handler () {
        //
        // },
        // init (editor) {
        //
        // },
        // destroyed(editor){
        //
        // },
        dashboard: dashboard$4
      };
      var template$5 = `<form @submit.prevent="createLink"> <input type="text" :placeholder="$parent.locale['please enter a url']" v-model="url" maxlength="1024"> <button type="submit">{{$parent.locale["create link"]}}</button> </form>`;
      var dashboard$5 = {
        template: template$5,
        data: function data() {
          return { url: null };
        },
        methods: {
          createLink: function createLink() {
            if (!this.url) {
              return;
            }
            this.$parent.execCommand("createLink", this.url);
            this.url = null;
          }
        }
      };
      var link = {
        name: "link",
        icon: "fa fa-chain",
        i18n: "link",
        dashboard: dashboard$5
      };
      var template$6 = `<div> <button type="button" @click="$parent.execCommand('insertOrderedList')"> {{$parent.locale["ordered list"]}} </button> <button type="button" @click="$parent.execCommand('insertUnorderedList')"> {{$parent.locale["unordered list"]}} </button> </div>`;
      var dashboard$6 = {
        template: template$6
      };
      var list = {
        name: "list",
        icon: "fa fa-list",
        i18n: "list",
        dashboard: dashboard$6
      };
      var template$7 = '<form @submit.prevent="insertTable"> <label> {{$parent.locale["row count"]}} <input type="number" style="width: 60px" maxlength="2" min="2" max="10" v-model="rows"> </label> <label> {{$parent.locale["column count"]}} <input type="number" style="width: 60px" maxlength="2" min="2" max="10" v-model="cols"> </label> <button type="submit">{{$parent.locale.save}}</button> </form>';
      var dashboard$7 = {
        template: template$7,
        data: function data() {
          return {
            rows: 2,
            cols: 2,
            hasHead: false,
            striped: false,
            hover: false
          };
        },
        methods: {
          insertTable: function insertTable() {
            if (this.rows < 2 || this.rows > 10) {
              return;
            }
            if (this.cols < 2 || this.cols > 10) {
              return;
            }
            var table2 = '<table style="border-spacing: 0px; border-collapse: collapse; width: 100%; max-width: 100%; margin-bottom: 0px; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); font-size: 14px; line-height: 20px; background-color: transparent;"><tbody>';
            for (var i = 0; i < this.rows; i++) {
              table2 += "<tr>";
              for (var j = 0; j < this.cols; j++) {
                table2 += '<td style="padding: 8px; line-height: 1.42857; vertical-align: top; border: 1px solid rgb(221, 221, 221);">&nbsp;</td>';
              }
              table2 += "</tr>";
            }
            table2 += "</tbody></table>";
            this.$parent.execCommand("insertHTML", table2);
          }
        }
      };
      var table = {
        // can not named table
        // dashboard.html will add to editor as a child component and named as module name
        // Do not use built-in or reserved HTML elements as component id
        name: "tabulation",
        icon: "fa fa-table",
        i18n: "table",
        dashboard: dashboard$7
      };
      var template$8 = `<div> <button type="button" @click="$parent.execCommand('bold')">{{$parent.locale["bold"]}}</button> <button type="button" @click="$parent.execCommand('italic')">{{$parent.locale["italic"]}}</button> <button type="button" @click="$parent.execCommand('underline')">{{$parent.locale["underline"]}}</button> <button type="button" @click="$parent.execCommand('strikeThrough')">{{$parent.locale["strike through"]}} </button> <button type="button" @click="$parent.execCommand('subscript')">{{$parent.locale["subscript"]}}</button> <button type="button" @click="$parent.execCommand('superscript')">{{$parent.locale["superscript"]}}</button> </div> `;
      var dashboard$8 = {
        template: template$8
      };
      var text = {
        name: "text",
        icon: "fa fa-pencil",
        i18n: "text",
        dashboard: dashboard$8
      };
      var undo = {
        name: "undo",
        icon: "fa-undo fa",
        i18n: "undo",
        handler: function handler(editor2) {
          editor2.execCommand("undo");
        }
      };
      var unlink = {
        name: "unlink",
        icon: "fa fa-chain-broken",
        i18n: "unlink",
        handler: function handler(editor2) {
          editor2.execCommand("unlink");
        }
      };
      var buildInModules = [
        text,
        color,
        font,
        align,
        list,
        link,
        unlink,
        table,
        image,
        hr,
        eraser,
        undo,
        fullScreen$1,
        info
      ];
      var mergeArray = function(sourceArr, extArr) {
        extArr.forEach(function(el) {
          sourceArr.push(el);
        });
      };
      var getDescendantTextNodes = function(ancestor) {
        if (ancestor.nodeType === Node.TEXT_NODE) {
          return [ancestor];
        }
        var textNodes = [];
        if (!ancestor.hasChildNodes()) {
          return textNodes;
        }
        var childNodes = ancestor.childNodes;
        for (var i = 0; i < childNodes.length; i++) {
          var node = childNodes[i];
          if (node.nodeType === Node.TEXT_NODE) {
            textNodes.push(node);
          } else if (node.nodeType === Node.ELEMENT_NODE) {
            mergeArray(textNodes, getDescendantTextNodes(node));
          }
        }
        return textNodes;
      };
      var getBeforeEndDescendantTextNodes = function(ancestor, endEl) {
        var textNodes = [];
        var endIndex = 0;
        for (var i = 0; i < ancestor.childNodes.length; i++) {
          if (ancestor.childNodes[i].contains(endEl)) {
            endIndex = i;
            break;
          }
        }
        for (var i$1 = 0; i$1 <= endIndex; i$1++) {
          var node = ancestor.childNodes[i$1];
          if (node === endEl) {
            mergeArray(textNodes, getDescendantTextNodes(node));
          } else if (i$1 === endIndex) {
            if (node.nodeType === Node.TEXT_NODE) {
              textNodes.push(node);
            } else if (node.nodeType === Node.ELEMENT_NODE) {
              mergeArray(textNodes, getBeforeEndDescendantTextNodes(node, endEl));
            }
          } else if (node.nodeType === Node.TEXT_NODE) {
            textNodes.push(node);
          } else if (node.nodeType === Node.ELEMENT_NODE) {
            mergeArray(textNodes, getDescendantTextNodes(node));
          }
        }
        return textNodes;
      };
      var getAfterStartDescendantTextNodes = function(ancestor, startEl) {
        var textNodes = [];
        var startIndex = 0;
        for (var i = 0; i < ancestor.childNodes.length; i++) {
          if (ancestor.childNodes[i].contains(startEl)) {
            startIndex = i;
            break;
          }
        }
        for (var i$1 = startIndex; i$1 < ancestor.childNodes.length; i$1++) {
          var node = ancestor.childNodes[i$1];
          if (node === startEl) {
            mergeArray(textNodes, getDescendantTextNodes(node));
          } else if (i$1 === startIndex) {
            if (node.nodeType === Node.TEXT_NODE) {
              textNodes.push(node);
            } else if (node.nodeType === Node.ELEMENT_NODE) {
              mergeArray(
                textNodes,
                getAfterStartDescendantTextNodes(node, startEl)
              );
            }
          } else if (node.nodeType === Node.TEXT_NODE) {
            textNodes.push(node);
          } else if (node.nodeType === Node.ELEMENT_NODE) {
            mergeArray(
              textNodes,
              getDescendantTextNodes(node)
            );
          }
        }
        return textNodes;
      };
      var getParentBlockNode = function(node) {
        var blockNodeNames = [
          "DIV",
          "P",
          "SECTION",
          "H1",
          "H2",
          "H3",
          "H4",
          "H5",
          "H6",
          "OL",
          "UL",
          "LI",
          "TR",
          "TD",
          "TH",
          "TBODY",
          "THEAD",
          "TABLE",
          "ARTICLE",
          "HEADER",
          "FOOTER"
        ];
        var container = node;
        while (container) {
          if (blockNodeNames.includes(container.nodeName)) {
            break;
          }
          container = container.parentNode;
        }
        return container;
      };
      var isInlineElement = function(node) {
        var inlineNodeNames = [
          "A",
          "ABBR",
          "ACRONYM",
          "B",
          "CITE",
          "CODE",
          "EM",
          "I",
          "FONT",
          "IMG",
          "S",
          "SMALL",
          "SPAN",
          "STRIKE",
          "STRONG",
          "U",
          "SUB",
          "SUP"
        ];
        return inlineNodeNames.includes(node.nodeName);
      };
      if (!Text.prototype.contains) {
        Text.prototype.contains = function contains(otherNode) {
          return this === otherNode;
        };
      }
      var RangeHandler = function RangeHandler2(range) {
        if (!range || !(range instanceof Range)) {
          throw new TypeError("cant't resolve range");
        }
        this.range = range;
      };
      RangeHandler.prototype.getAllTextNodesInRange = function getAllTextNodesInRange() {
        var startContainer = this.range.startContainer;
        var endContainer = this.range.endContainer;
        var rootEl = this.range.commonAncestorContainer;
        var textNodes = [];
        if (startContainer === endContainer) {
          if (startContainer.nodeType === Node.TEXT_NODE) {
            return [startContainer];
          }
          var childNodes = startContainer.childNodes;
          for (var i = this.range.startOffset; i < this.range.endOffset; i++) {
            mergeArray(textNodes, getDescendantTextNodes(childNodes[i]));
          }
          return textNodes;
        }
        var startIndex = 0;
        var endIndex = 0;
        for (var i$1 = 0; i$1 < rootEl.childNodes.length; i$1++) {
          var node = rootEl.childNodes[i$1];
          if (node.contains(startContainer)) {
            startIndex = i$1;
          }
          if (node.contains(endContainer)) {
            endIndex = i$1;
          }
        }
        for (var i$2 = startIndex; i$2 <= endIndex; i$2++) {
          var node$1 = rootEl.childNodes[i$2];
          if (i$2 === startIndex) {
            if (node$1.nodeType === Node.TEXT_NODE) {
              textNodes.push(node$1);
            } else if (node$1.nodeType === Node.ELEMENT_NODE) {
              mergeArray(textNodes, getAfterStartDescendantTextNodes(node$1, startContainer));
            }
          } else if (i$2 === endIndex) {
            if (node$1.nodeType === Node.TEXT_NODE) {
              textNodes.push(node$1);
            } else if (node$1.nodeType === Node.ELEMENT_NODE) {
              mergeArray(textNodes, getBeforeEndDescendantTextNodes(node$1, endContainer));
            }
          } else if (node$1.nodeType === Node.TEXT_NODE) {
            textNodes.push(node$1);
          } else if (node$1.nodeType === Node.ELEMENT_NODE) {
            mergeArray(textNodes, getDescendantTextNodes(node$1));
          }
        }
        return textNodes;
      };
      RangeHandler.prototype.execCommand = function execCommand(command, arg) {
        var this$1 = this;
        switch (command) {
          case Command.FONT_SIZE: {
            var textNodes = this.getAllTextNodesInRange();
            if (!textNodes.length) {
              break;
            }
            if (textNodes.length === 1 && textNodes[0] === this.range.startContainer && textNodes[0] === this.range.endContainer) {
              var textNode = textNodes[0];
              if (this.range.startOffset === 0 && this.range.endOffset === textNode.textContent.length) {
                if (textNode.parentNode.childNodes.length === 1 && isInlineElement(textNode.parentNode)) {
                  textNode.parentNode.style.fontSize = arg;
                  break;
                }
                var span = document.createElement("span");
                span.style.fontSize = arg;
                textNode.parentNode.insertBefore(span, textNode);
                span.appendChild(textNode);
                break;
              }
              var span$1 = document.createElement("span");
              span$1.innerText = textNode.textContent.substring(
                this.range.startOffset,
                this.range.endOffset
              );
              span$1.style.fontSize = arg;
              var frontPart = document.createTextNode(
                textNode.textContent.substring(0, this.range.startOffset)
              );
              textNode.parentNode.insertBefore(frontPart, textNode);
              textNode.parentNode.insertBefore(span$1, textNode);
              textNode.textContent = textNode.textContent.substring(this.range.endOffset);
              this.range.setStart(span$1, 0);
              this.range.setEnd(span$1, 1);
              break;
            }
            textNodes.forEach(function(textNode2) {
              if (textNode2 === this$1.range.startContainer) {
                if (this$1.range.startOffset === 0) {
                  if (textNode2.parentNode.childNodes.length === 1 && isInlineElement(textNode2.parentNode)) {
                    textNode2.parentNode.style.fontSize = arg;
                  } else {
                    var span$12 = document.createElement("span");
                    span$12.style.fontSize = arg;
                    textNode2.parentNode.insertBefore(span$12, textNode2);
                    span$12.appendChild(textNode2);
                  }
                  return;
                }
                var span$2 = document.createElement("span");
                textNode2.textContent = textNode2.textContent.substring(
                  0,
                  this$1.range.startOffset
                );
                span$2.style.fontSize = arg;
                textNode2.parentNode.insertBefore(span$2, textNode2);
                this$1.range.setStart(textNode2, 0);
                return;
              }
              if (textNode2 === this$1.range.endContainer) {
                if (this$1.range.endOffset === textNode2.textContent.length) {
                  if (textNode2.parentNode.childNodes.length === 1 && isInlineElement(textNode2.parentNode)) {
                    textNode2.parentNode.style.fontSize = arg;
                  } else {
                    var span$3 = document.createElement("span");
                    span$3.style.fontSize = arg;
                    textNode2.parentNode.insertBefore(span$3, textNode2);
                    span$3.appendChild(textNode2);
                  }
                  return;
                }
                var span$4 = document.createElement("span");
                textNode2.textContent = textNode2.textContent.substring(this$1.range.endOffset);
                span$4.style.fontSize = arg;
                textNode2.parentNode.insertBefore(span$4, textNode2);
                span$4.appendChild(textNode2);
                this$1.range.setStart(textNode2, textNode2.textContent.length);
                return;
              }
              if (textNode2.parentNode.childNodes.length === 1 && isInlineElement(textNode2.parentNode)) {
                textNode2.parentNode.style.fontSize = arg;
                return;
              }
              var span2 = document.createElement("span");
              span2.style.fontSize = arg;
              textNode2.parentNode.insertBefore(span2, textNode2);
              span2.appendChild(textNode2);
            });
            break;
          }
          case Command.FORMAT_BLOCK: {
            if (document.execCommand(Command.FORMAT_BLOCK, false, arg)) {
              break;
            }
            var element = document.createElement(arg);
            this.range.surroundContents(element);
            break;
          }
          case Command.LINE_HEIGHT: {
            var textNodes$1 = this.getAllTextNodesInRange();
            textNodes$1.forEach(function(textNode2) {
              var parentBlock = getParentBlockNode(textNode2);
              if (parentBlock) {
                parentBlock.style.lineHeight = arg;
              }
            });
            break;
          }
          case Command.INSERT_HTML: {
            if (document.execCommand(Command.INSERT_HTML, false, arg)) {
              break;
            }
            var fragment = document.createDocumentFragment();
            var div = document.createElement("div");
            div.innerHTML = arg;
            if (div.hasChildNodes()) {
              for (var i = 0; i < div.childNodes.length; i++) {
                fragment.appendChild(div.childNodes[i].cloneNode(true));
              }
            }
            this.range.deleteContents();
            this.range.insertNode(fragment);
            break;
          }
          default: {
            document.execCommand(command, false, arg);
            break;
          }
        }
      };
      __$styleInject(".vue-html5-editor,.vue-html5-editor *{box-sizing:border-box}.vue-html5-editor{font-size:14px;line-height:1.5;background-color:#fff;color:#333;border:1px solid #ddd;text-align:left;border-radius:5px;overflow:hidden}.vue-html5-editor.full-screen{position:fixed!important;top:0!important;left:0!important;bottom:0!important;right:0!important;border-radius:0}.vue-html5-editor>.toolbar{position:relative;background-color:inherit}.vue-html5-editor>.toolbar>ul{list-style:none;padding:0;margin:0;border-bottom:1px solid #ddd}.vue-html5-editor>.toolbar>ul>li{display:inline-block;cursor:pointer;text-align:center;line-height:36px;padding:0 10px}.vue-html5-editor>.toolbar>ul>li .icon{height:16px;width:16px;display:inline-block;vertical-align:middle}.vue-html5-editor>.toolbar>.dashboard{background-color:inherit;border-bottom:1px solid #ddd;padding:10px;position:absolute;top:100%;left:0;right:0;overflow:auto}.vue-html5-editor>.toolbar>.dashboard input[type=text],.vue-html5-editor>.toolbar>.dashboard input[type=number],.vue-html5-editor>.toolbar>.dashboard select{padding:6px 12px;color:inherit;background-color:transparent;border:1px solid #ddd;border-radius:5px}.vue-html5-editor>.toolbar>.dashboard input[type=text]:hover,.vue-html5-editor>.toolbar>.dashboard input[type=number]:hover,.vue-html5-editor>.toolbar>.dashboard select:hover{border-color:#bebebe}.vue-html5-editor>.toolbar>.dashboard input[type=text][disabled],.vue-html5-editor>.toolbar>.dashboard input[type=text][readonly],.vue-html5-editor>.toolbar>.dashboard input[type=number][disabled],.vue-html5-editor>.toolbar>.dashboard input[type=number][readonly],.vue-html5-editor>.toolbar>.dashboard select[disabled],.vue-html5-editor>.toolbar>.dashboard select[readonly]{background-color:#eee;opacity:1}.vue-html5-editor>.toolbar>.dashboard input[type=text][disabled],.vue-html5-editor>.toolbar>.dashboard input[type=number][disabled],.vue-html5-editor>.toolbar>.dashboard select[disabled]{cursor:not-allowed}.vue-html5-editor>.toolbar>.dashboard button{color:inherit;background-color:inherit;padding:6px 12px;white-space:nowrap;vertical-align:middle;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:1px solid #ddd;border-radius:5px;margin-right:4px;margin-bottom:4px}.vue-html5-editor>.toolbar>.dashboard button:hover{border-color:#bebebe}.vue-html5-editor>.toolbar>.dashboard button[disabled]{cursor:not-allowed;opacity:.68}.vue-html5-editor>.toolbar>.dashboard button:last-child{margin-right:0}.vue-html5-editor>.toolbar>.dashboard label{font-weight:bolder}.vue-html5-editor>.content{overflow:auto;padding:10px}.vue-html5-editor>.content:focus{outline:0}", void 0);
      var template$9 = `<div class="vue-html5-editor" :class="{'full-screen':fullScreen}" :style="{'z-index':zIndex}"> <div class="toolbar" :style="{'z-index':zIndex+1}" ref="toolbar"> <ul> <template v-for="module in modules"> <li :title="locale[module.i18n]" @click="activeModule(module)"> <span class="icon" :class="module.icon"></span> <template v-if="showModuleName === undefined ? defaultShowModuleName : showModuleName"> &nbsp;{{locale[module.i18n]}} </template> </li> </template> </ul> <div class="dashboard" v-show="dashboard" ref="dashboard"> <keep-alive> <div v-show="dashboard" :is="dashboard"></div> </keep-alive> </div> </div> <div class="content" ref="content" :style="contentStyle" contenteditable @click="toggleDashboard(dashboard)"> </div> </div>`;
      var editor = {
        template: template$9,
        props: {
          content: {
            type: String,
            required: true,
            default: ""
          },
          height: {
            type: Number,
            default: 300,
            validator: function validator(val) {
              return val >= 100;
            }
          },
          zIndex: {
            type: Number,
            default: 1e3
          },
          autoHeight: {
            type: Boolean,
            default: true
          },
          showModuleName: {}
        },
        data: function data() {
          return {
            // defaultShowModuleName:false
            // locale: {},
            // modules:{},
            fullScreen: false,
            dashboard: null
          };
        },
        watch: {
          content: function content(val) {
            var content2 = this.$refs.content.innerHTML;
            if (val !== content2) {
              this.$refs.content.innerHTML = val;
            }
          },
          fullScreen: function fullScreen(val) {
            var component = this;
            if (val) {
              component.parentEl = component.$el.parentNode;
              component.nextEl = component.$el.nextSibling;
              document.body.appendChild(component.$el);
              return;
            }
            if (component.nextEl) {
              component.parentEl.insertBefore(component.$el, component.nextEl);
              return;
            }
            component.parentEl.appendChild(component.$el);
          }
        },
        computed: {
          contentStyle: function contentStyle() {
            var style = {};
            if (this.fullScreen) {
              style.height = window.innerHeight - this.$refs.toolbar.clientHeight - 1 + "px";
              return style;
            }
            if (!this.autoHeight) {
              style.height = this.height + "px";
              return style;
            }
            style["min-height"] = this.height + "px";
            return style;
          }
        },
        methods: {
          toggleFullScreen: function toggleFullScreen() {
            this.fullScreen = !this.fullScreen;
          },
          enableFullScreen: function enableFullScreen() {
            this.fullScreen = true;
          },
          exitFullScreen: function exitFullScreen() {
            this.fullScreen = false;
          },
          focus: function focus() {
            this.$refs.content.focus();
          },
          toggleDashboard: function toggleDashboard(dashboard2) {
            this.dashboard = this.dashboard === dashboard2 ? null : dashboard2;
          },
          execCommand: function execCommand(command, arg) {
            this.restoreSelection();
            if (this.range) {
              new RangeHandler(this.range).execCommand(command, arg);
            }
            this.toggleDashboard();
            this.$emit("change", this.$refs.content.innerHTML);
          },
          getCurrentRange: function getCurrentRange() {
            return this.range;
          },
          saveCurrentRange: function saveCurrentRange() {
            var this$1 = this;
            var selection = window.getSelection ? window.getSelection() : document.getSelection();
            if (!selection.rangeCount) {
              return;
            }
            var content = this.$refs.content;
            for (var i = 0; i < selection.rangeCount; i++) {
              var range = selection.getRangeAt(0);
              var start = range.startContainer;
              var end = range.endContainer;
              start = start.nodeType === Node.TEXT_NODE ? start.parentNode : start;
              end = end.nodeType === Node.TEXT_NODE ? end.parentNode : end;
              if (content.contains(start) && content.contains(end)) {
                this$1.range = range;
                break;
              }
            }
          },
          restoreSelection: function restoreSelection() {
            var selection = window.getSelection ? window.getSelection() : document.getSelection();
            selection.removeAllRanges();
            if (this.range) {
              selection.addRange(this.range);
            } else {
              var content = this.$refs.content;
              var div = document.createElement("div");
              var range = document.createRange();
              content.appendChild(div);
              range.setStart(div, 0);
              range.setEnd(div, 0);
              selection.addRange(range);
              this.range = range;
            }
          },
          activeModule: function activeModule(module2) {
            if (typeof module2.handler === "function") {
              module2.handler(this);
              return;
            }
            if (module2.hasDashboard) {
              this.toggleDashboard("dashboard-" + module2.name);
            }
          }
        },
        created: function created() {
          var this$1 = this;
          this.modules.forEach(function(module2) {
            if (typeof module2.init === "function") {
              module2.init(this$1);
            }
          });
        },
        mounted: function mounted() {
          var this$1 = this;
          var content = this.$refs.content;
          content.innerHTML = this.content;
          content.addEventListener("mouseup", this.saveCurrentRange, false);
          content.addEventListener("keyup", function() {
            this$1.$emit("change", content.innerHTML);
            this$1.saveCurrentRange();
          }, false);
          content.addEventListener("mouseout", function(e) {
            if (e.target === content) {
              this$1.saveCurrentRange();
            }
          }, false);
          this.touchHandler = function(e) {
            if (content.contains(e.target)) {
              this$1.saveCurrentRange();
            }
          };
          window.addEventListener("touchend", this.touchHandler, false);
        },
        updated: function updated() {
          if (this.$refs.dashboard) {
            this.$refs.dashboard.style.maxHeight = this.$refs.content.clientHeight + "px";
          }
        },
        beforeDestroy: function beforeDestroy() {
          var this$1 = this;
          window.removeEventListener("touchend", this.touchHandler);
          this.modules.forEach(function(module2) {
            if (typeof module2.destroyed === "function") {
              module2.destroyed(this$1);
            }
          });
        }
      };
      var i18nZhCn = {
        align: "对齐方式",
        image: "图片",
        list: "列表",
        link: "链接",
        unlink: "去除链接",
        table: "表格",
        font: "文字",
        "full screen": "全屏",
        text: "排版",
        eraser: "格式清除",
        info: "关于",
        color: "颜色",
        "please enter a url": "请输入地址",
        "create link": "创建链接",
        bold: "加粗",
        italic: "倾斜",
        underline: "下划线",
        "strike through": "删除线",
        subscript: "上标",
        superscript: "下标",
        heading: "标题",
        "font name": "字体",
        "font size": "文字大小",
        "left justify": "左对齐",
        "center justify": "居中",
        "right justify": "右对齐",
        "ordered list": "有序列表",
        "unordered list": "无序列表",
        "fore color": "前景色",
        "background color": "背景色",
        "row count": "行数",
        "column count": "列数",
        save: "确定",
        upload: "上传",
        progress: "进度",
        unknown: "未知",
        "please wait": "请稍等",
        error: "错误",
        abort: "中断",
        reset: "重置",
        hr: "分隔线",
        undo: "撤消",
        "line height": "行高",
        "exceed size limit": "超出大小限制"
      };
      var i18nEnUs = {
        align: "align",
        image: "image",
        list: "list",
        link: "link",
        unlink: "unlink",
        table: "table",
        font: "font",
        "full screen": "full screen",
        text: "text",
        eraser: "remove format",
        info: "info",
        color: "color",
        "please enter a url": "please enter a url",
        "create link": "create link",
        bold: "bold",
        italic: "italic",
        underline: "underline",
        "strike through": "strike through",
        subscript: "subscript",
        superscript: "superscript",
        heading: "heading",
        "font name": "font name",
        "font size": "font size",
        "left justify": "left justify",
        "center justify": "center justify",
        "right justify": "right justify",
        "ordered list": "ordered list",
        "unordered list": "unordered list",
        "fore color": "fore color",
        "background color": "background color",
        "row count": "row count",
        "column count": "column count",
        save: "save",
        upload: "upload",
        progress: "progress",
        unknown: "unknown",
        "please wait": "please wait",
        error: "error",
        abort: "abort",
        reset: "reset",
        hr: "horizontal rule",
        undo: "undo",
        "line height": "line height",
        "exceed size limit": "exceed size limit"
      };
      function mixin(source, ext) {
        if (source === void 0)
          source = {};
        if (ext === void 0)
          ext = {};
        Object.keys(ext).forEach(function(k) {
          if (k === "data") {
            var dataSrc = source[k];
            var dataDesc = ext[k];
            if (typeof dataDesc === "function") {
              if (typeof dataSrc !== "function") {
                source[k] = dataDesc;
              } else {
                source[k] = function() {
                  return mixin(dataSrc(), dataDesc());
                };
              }
            }
          } else {
            source[k] = ext[k];
          }
        });
        return source;
      }
      polyfill();
      var VueHtml5Editor = function VueHtml5Editor2(options) {
        if (options === void 0)
          options = {};
        var modules = [].concat(buildInModules);
        var components = {};
        if (Array.isArray(options.modules)) {
          options.modules.forEach(function(module2) {
            if (module2.name) {
              modules.push(module2);
            }
          });
        }
        if (Array.isArray(options.hiddenModules)) {
          modules = function() {
            var arr = [];
            modules.forEach(function(m) {
              if (!options.hiddenModules.includes(m.name)) {
                arr.push(m);
              }
            });
            return arr;
          }();
        }
        if (Array.isArray(options.visibleModules)) {
          modules = function() {
            var arr = [];
            options.visibleModules.forEach(function(name) {
              modules.forEach(function(module2) {
                if (module2.name === name) {
                  arr.push(module2);
                }
              });
            });
            return arr;
          }();
        }
        modules.forEach(function(module2) {
          var config = options[module2.name];
          module2.config = mixin(module2.config, config);
          if (module2.dashboard) {
            module2.dashboard.module = module2;
            components["dashboard-" + module2.name] = module2.dashboard;
          }
          if (options.icons && options.icons[module2.name]) {
            module2.icon = options.icons[module2.name];
          }
          module2.hasDashboard = !!module2.dashboard;
          module2.dashboard = null;
        });
        var i18n = { "zh-cn": i18nZhCn, "en-us": i18nEnUs };
        var customI18n = options.i18n || {};
        Object.keys(customI18n).forEach(function(key) {
          i18n[key] = i18n[key] ? mixin(i18n[key], customI18n[key]) : customI18n[key];
        });
        var language = options.language || "en-us";
        var locale = i18n[language];
        var defaultShowModuleName = !!options.showModuleName;
        var compo = mixin(editor, {
          data: function data() {
            return { modules, locale, defaultShowModuleName };
          },
          components
        });
        mixin(this, compo);
      };
      VueHtml5Editor.install = function install(Vue, options) {
        if (options === void 0)
          options = {};
        Vue.component(options.name || "vue-html5-editor", new VueHtml5Editor(options));
      };
      return VueHtml5Editor;
    });
  }
});
export default require_vue_html5_editor();
//# sourceMappingURL=vue-html5-editor.js.map

import { fileURLToPath } from 'url';
import { defineNuxtModule, createResolver, addVitePlugin, addPlugin, addComponent, addImports } from '@nuxt/kit';
import { viteStaticCopy } from 'vite-plugin-static-copy';



// -- Unbuild CommonJS Shims --
import __cjs_url__ from 'url';
import __cjs_path__ from 'path';
import __cjs_mod__ from 'module';
const __filename = __cjs_url__.fileURLToPath(import.meta.url);
const __dirname = __cjs_path__.dirname(__filename);
const require = __cjs_mod__.createRequire(import.meta.url);
const DEFAULTS = {
  dest: "_monaco",
  locale: "en",
  componentName: {
    codeEditor: "MonacoEditor",
    diffEditor: "MonacoDiffEditor"
  }
};
const module = defineNuxtModule({
  meta: {
    name: "nuxt-monaco-editor",
    configKey: "monacoEditor",
    compatibility: { nuxt: "^3.1.0" }
  },
  defaults: DEFAULTS,
  setup(options, nuxt) {
    const isDev = nuxt.options.dev;
    options.dest = (isDev ? "_nuxt_monaco_editor/" : "_nuxt/") + options.dest;
    const runtimeDir = fileURLToPath(new URL("./runtime", import.meta.url));
    const { resolve: resolveURL } = createResolver(nuxt.options.app.baseURL);
    const { resolve } = createResolver(runtimeDir);
    const monacoEditorLocation = resolveURL(options.dest);
    nuxt.options.build.transpile.push(runtimeDir);
    nuxt.options.build.transpile.push(({ isClient }) => isClient ? "monaco-editor" : false);
    nuxt.options.runtimeConfig.app.__MONACO_EDITOR_LOCALE__ = options.locale;
    nuxt.options.runtimeConfig.app.__MONACO_EDITOR_LOCATION__ = monacoEditorLocation;
    const viteStaticCopyPlugin = viteStaticCopy({
      targets: [{
        src: require.resolve("monaco-editor/min/vs/loader.js").replace(/\\/g, "/").replace(/\/vs\/loader\.js$/, "/*"),
        dest: options.dest
      }]
    });
    addVitePlugin(viteStaticCopyPlugin);
    addPlugin(resolve("plugin.client"));
    addComponent({ name: options.componentName.codeEditor, filePath: resolve("MonacoEditor.vue") });
    addComponent({ name: options.componentName.diffEditor, filePath: resolve("MonacoDiffEditor.vue") });
    addImports({ name: "useMonaco", as: "useMonaco", from: resolve("composables") });
  }
});

export { module as default };
